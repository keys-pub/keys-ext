on:
  push:
    branches:
      - master
  pull_request:
name: Test
jobs:
  security:
    name: Review security
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.0"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run gosec
        shell: bash
        run: bash -x ./security.sh
        
  golangci-lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt install software-properties-common
          sudo apt-add-repository ppa:yubico/stable
          sudo apt update
          sudo apt install libfido2-dev
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.39.0
          echo "::add-path::${{ github.workspace }}/go/bin"
      - name: Run golangci-lint
        shell: bash
        run: bash -x ./lint.sh
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies (ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install software-properties-common
          sudo apt-add-repository ppa:yubico/stable
          sudo apt update
          sudo apt install libfido2-dev
      - name: Install dependencies (macos)
        if: matrix.os == 'macos-latest'
        run: |
          brew install pkg-config
          brew install keys-pub/tap/libfido2
      - name: Install dependencies (windows)
        if: matrix.os == 'windows-latest'
        run: |
          Set-ExecutionPolicy RemoteSigned -scope CurrentUser
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop bucket add keys.pub https://github.com/keys-pub/scoop-bucket
          scoop install libfido2
          echo "$HOME/scoop/apps/libfido2/current" >> $GITHUB_PATH          
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.0"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        shell: bash
        run: ./test.sh          
      - name: Test (macos)
        if: matrix.os == 'macos-latest'
        run: |
          (cd auth/rpc && go test -v ./...)
