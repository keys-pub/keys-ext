// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: keys.proto

// Proto field names should be snake_case, but some plugins don't convert to
// camel like they should, so we use camelCase here.

package service

import (
	_ "github.com/alta/protopatch/patch/gopb"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EncryptMode int32

const (
	DefaultEncrypt    EncryptMode = 0
	SaltpackEncrypt   EncryptMode = 1
	SaltpackSigncrypt EncryptMode = 3
)

// Enum value maps for EncryptMode.
var (
	EncryptMode_name = map[int32]string{
		0: "DEFAULT_ENCRYPT",
		1: "SALTPACK_ENCRYPT",
		3: "SALTPACK_SIGNCRYPT",
	}
	EncryptMode_value = map[string]int32{
		"DEFAULT_ENCRYPT":    0,
		"SALTPACK_ENCRYPT":   1,
		"SALTPACK_SIGNCRYPT": 3,
	}
)

func (x EncryptMode) Enum() *EncryptMode {
	p := new(EncryptMode)
	*p = x
	return p
}

func (x EncryptMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptMode) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[0].Descriptor()
}

func (EncryptMode) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[0]
}

func (x EncryptMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptMode.Descriptor instead.
func (EncryptMode) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{0}
}

type AuthStatus int32

const (
	AuthUnknown AuthStatus = 0
	// AuthSetupNeeded if setup needed.
	AuthSetupNeeded AuthStatus = 1
	// AuthUnlocked if unlocked.
	AuthUnlocked AuthStatus = 2
	// AuthLocked if locked.
	AuthLocked AuthStatus = 3
)

// Enum value maps for AuthStatus.
var (
	AuthStatus_name = map[int32]string{
		0: "AUTH_UNKNOWN",
		1: "AUTH_SETUP_NEEDED",
		2: "AUTH_UNLOCKED",
		3: "AUTH_LOCKED",
	}
	AuthStatus_value = map[string]int32{
		"AUTH_UNKNOWN":      0,
		"AUTH_SETUP_NEEDED": 1,
		"AUTH_UNLOCKED":     2,
		"AUTH_LOCKED":       3,
	}
)

func (x AuthStatus) Enum() *AuthStatus {
	p := new(AuthStatus)
	*p = x
	return p
}

func (x AuthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[1].Descriptor()
}

func (AuthStatus) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[1]
}

func (x AuthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthStatus.Descriptor instead.
func (AuthStatus) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{1}
}

type AuthType int32

const (
	UnknownAuth AuthType = 0
	// PasswordAuth uses password with salt (argon2id).
	PasswordAuth AuthType = 10
	// PaperKeyAuth uses a BIP39 phrase representing a key.
	PaperKeyAuth AuthType = 11
	// FIDO2HMACSecretAuth uses a FIDO2 HMAC-Secret extension.
	FIDO2HMACSecretAuth AuthType = 20
)

// Enum value maps for AuthType.
var (
	AuthType_name = map[int32]string{
		0:  "UNKNOWN_AUTH",
		10: "PASSWORD_AUTH",
		11: "PAPER_KEY_AUTH",
		20: "FIDO2_HMAC_SECRET_AUTH",
	}
	AuthType_value = map[string]int32{
		"UNKNOWN_AUTH":           0,
		"PASSWORD_AUTH":          10,
		"PAPER_KEY_AUTH":         11,
		"FIDO2_HMAC_SECRET_AUTH": 20,
	}
)

func (x AuthType) Enum() *AuthType {
	p := new(AuthType)
	*p = x
	return p
}

func (x AuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[2].Descriptor()
}

func (AuthType) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[2]
}

func (x AuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthType.Descriptor instead.
func (AuthType) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{2}
}

type ExportType int32

const (
	DefaultExport  ExportType = 0
	SaltpackExport ExportType = 1
	SSHExport      ExportType = 2
)

// Enum value maps for ExportType.
var (
	ExportType_name = map[int32]string{
		0: "DEFAULT_EXPORT_TYPE",
		1: "SALTPACK_EXPORT_TYPE",
		2: "SSH_EXPORT_TYPE",
	}
	ExportType_value = map[string]int32{
		"DEFAULT_EXPORT_TYPE":  0,
		"SALTPACK_EXPORT_TYPE": 1,
		"SSH_EXPORT_TYPE":      2,
	}
)

func (x ExportType) Enum() *ExportType {
	p := new(ExportType)
	*p = x
	return p
}

func (x ExportType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportType) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[3].Descriptor()
}

func (ExportType) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[3]
}

func (x ExportType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportType.Descriptor instead.
func (ExportType) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{3}
}

type SortDirection int32

const (
	SortAsc  SortDirection = 0
	SortDesc SortDirection = 1
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	SortDirection_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[4].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[4]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{4}
}

type SecretType int32

const (
	UnknownSecret  SecretType = 0
	PasswordSecret SecretType = 10
	ContactSecret  SecretType = 11
	CardSecret     SecretType = 12
	NoteSecret     SecretType = 13
)

// Enum value maps for SecretType.
var (
	SecretType_name = map[int32]string{
		0:  "UNKNOWN_SECRET_TYPE",
		10: "PASSWORD_SECRET",
		11: "CONTACT_SECRET",
		12: "CARD_SECRET",
		13: "NOTE_SECRET",
	}
	SecretType_value = map[string]int32{
		"UNKNOWN_SECRET_TYPE": 0,
		"PASSWORD_SECRET":     10,
		"CONTACT_SECRET":      11,
		"CARD_SECRET":         12,
		"NOTE_SECRET":         13,
	}
)

func (x SecretType) Enum() *SecretType {
	p := new(SecretType)
	*p = x
	return p
}

func (x SecretType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretType) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[5].Descriptor()
}

func (SecretType) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[5]
}

func (x SecretType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretType.Descriptor instead.
func (SecretType) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{5}
}

type Encoding int32

const (
	Hex      Encoding = 0
	Base62   Encoding = 1
	Base58   Encoding = 2
	Base32   Encoding = 3
	Base16   Encoding = 4
	Base64   Encoding = 5
	Saltpack Encoding = 6
	BIP39    Encoding = 7
)

// Enum value maps for Encoding.
var (
	Encoding_name = map[int32]string{
		0: "HEX",
		1: "BASE62",
		2: "BASE58",
		3: "BASE32",
		4: "BASE16",
		5: "BASE64",
		6: "SALTPACK",
		7: "BIP39",
	}
	Encoding_value = map[string]int32{
		"HEX":      0,
		"BASE62":   1,
		"BASE58":   2,
		"BASE32":   3,
		"BASE16":   4,
		"BASE64":   5,
		"SALTPACK": 6,
		"BIP39":    7,
	}
)

func (x Encoding) Enum() *Encoding {
	p := new(Encoding)
	*p = x
	return p
}

func (x Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[6].Descriptor()
}

func (Encoding) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[6]
}

func (x Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Encoding.Descriptor instead.
func (Encoding) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{6}
}

type UserStatus int32

const (
	UserStatusUnknown          UserStatus = 0
	UserStatusOK               UserStatus = 1
	UserStatusResourceNotFound UserStatus = 20
	UserStatusContentNotFound  UserStatus = 30
	UserStatusContentInvalid   UserStatus = 31
	UserStatusConnFailure      UserStatus = 40
	UserStatusFailure          UserStatus = 50
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0:  "USER_UNKNOWN",
		1:  "USER_OK",
		20: "USER_RESOURCE_NOT_FOUND",
		30: "USER_CONTENT_NOT_FOUND",
		31: "USER_CONTENT_INVALID",
		40: "USER_CONN_FAILURE",
		50: "USER_FAILURE",
	}
	UserStatus_value = map[string]int32{
		"USER_UNKNOWN":            0,
		"USER_OK":                 1,
		"USER_RESOURCE_NOT_FOUND": 20,
		"USER_CONTENT_NOT_FOUND":  30,
		"USER_CONTENT_INVALID":    31,
		"USER_CONN_FAILURE":       40,
		"USER_FAILURE":            50,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[7].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[7]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{7}
}

type MessageStatus int32

const (
	MessageSent    MessageStatus = 0
	MessagePending MessageStatus = 1
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "MESSAGE_SENT",
		1: "MESSAGE_PENDING",
	}
	MessageStatus_value = map[string]int32{
		"MESSAGE_SENT":    0,
		"MESSAGE_PENDING": 1,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[8].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[8]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{8}
}

type RelayType int32

const (
	RelayUnspecified    RelayType = 0
	RelayHello          RelayType = 1
	RelayChannelCreated RelayType = 10
	RelayChannelMessage RelayType = 20
)

// Enum value maps for RelayType.
var (
	RelayType_name = map[int32]string{
		0:  "RELAY_UNSPECIFIED",
		1:  "RELAY_HELLO",
		10: "RELAY_CHANNEL_CREATED",
		20: "RELAY_CHANNEL_MESSAGE",
	}
	RelayType_value = map[string]int32{
		"RELAY_UNSPECIFIED":     0,
		"RELAY_HELLO":           1,
		"RELAY_CHANNEL_CREATED": 10,
		"RELAY_CHANNEL_MESSAGE": 20,
	}
)

func (x RelayType) Enum() *RelayType {
	p := new(RelayType)
	*p = x
	return p
}

func (x RelayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelayType) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[9].Descriptor()
}

func (RelayType) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[9]
}

func (x RelayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelayType.Descriptor instead.
func (RelayType) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{9}
}

type WormholeStatus int32

const (
	WormholeDefault WormholeStatus = 0
	// WormholeStarting if starting.
	WormholeStarting WormholeStatus = 10
	// WormholeOffering if offering.
	WormholeOffering WormholeStatus = 20
	// WormholeAnswering if answering.
	WormholeAnswering WormholeStatus = 21
	// WormholeHandshake if found offer/answer and trying to SCTP/Noise handshake.
	WormholeHandshake WormholeStatus = 40
	// WormholeConnected if connected
	WormholeConnected WormholeStatus = 100
	// WormholeClosed if closed
	WormholeClosed WormholeStatus = 200
)

// Enum value maps for WormholeStatus.
var (
	WormholeStatus_name = map[int32]string{
		0:   "WORMHOLE_DEFAULT",
		10:  "WORMHOLE_STARTING",
		20:  "WORMHOLE_OFFERING",
		21:  "WORMHOLE_ANSWERING",
		40:  "WORMHOLE_HANDSHAKE",
		100: "WORMHOLE_CONNECTED",
		200: "WORMHOLE_CLOSED",
	}
	WormholeStatus_value = map[string]int32{
		"WORMHOLE_DEFAULT":   0,
		"WORMHOLE_STARTING":  10,
		"WORMHOLE_OFFERING":  20,
		"WORMHOLE_ANSWERING": 21,
		"WORMHOLE_HANDSHAKE": 40,
		"WORMHOLE_CONNECTED": 100,
		"WORMHOLE_CLOSED":    200,
	}
)

func (x WormholeStatus) Enum() *WormholeStatus {
	p := new(WormholeStatus)
	*p = x
	return p
}

func (x WormholeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WormholeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[10].Descriptor()
}

func (WormholeStatus) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[10]
}

func (x WormholeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WormholeStatus.Descriptor instead.
func (WormholeStatus) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{10}
}

type WormholeMessageStatus int32

const (
	WormholeMessageSent    WormholeMessageStatus = 0
	WormholeMessagePending WormholeMessageStatus = 1
	WormholeMessageAck     WormholeMessageStatus = 2
)

// Enum value maps for WormholeMessageStatus.
var (
	WormholeMessageStatus_name = map[int32]string{
		0: "WORMHOLE_MESSAGE_SENT",
		1: "WORMHOLE_MESSAGE_PENDING",
		2: "WORMHOLE_MESSAGE_ACK",
	}
	WormholeMessageStatus_value = map[string]int32{
		"WORMHOLE_MESSAGE_SENT":    0,
		"WORMHOLE_MESSAGE_PENDING": 1,
		"WORMHOLE_MESSAGE_ACK":     2,
	}
)

func (x WormholeMessageStatus) Enum() *WormholeMessageStatus {
	p := new(WormholeMessageStatus)
	*p = x
	return p
}

func (x WormholeMessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WormholeMessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_keys_proto_enumTypes[11].Descriptor()
}

func (WormholeMessageStatus) Type() protoreflect.EnumType {
	return &file_keys_proto_enumTypes[11]
}

func (x WormholeMessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WormholeMessageStatus.Descriptor instead.
func (WormholeMessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{11}
}

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Signer string `protobuf:"bytes,5,opt,name=signer,proto3" json:"signer,omitempty"`
	// Armored, if true, output will be armored.
	Armored bool `protobuf:"varint,10,opt,name=armored,proto3" json:"armored,omitempty"`
	// Detached, if true, output will be just the signature.
	Detached bool `protobuf:"varint,11,opt,name=detached,proto3" json:"detached,omitempty"`
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{0}
}

func (x *SignRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SignRequest) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *SignRequest) GetArmored() bool {
	if x != nil {
		return x.Armored
	}
	return false
}

func (x *SignRequest) GetDetached() bool {
	if x != nil {
		return x.Detached
	}
	return false
}

type SignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data is signed output.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	KID  string `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
}

func (x *SignResponse) Reset() {
	*x = SignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResponse) ProtoMessage() {}

func (x *SignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResponse.ProtoReflect.Descriptor instead.
func (*SignResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{1}
}

func (x *SignResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SignResponse) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

type SignFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In is input file path.
	In string `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	// Out file path (or sig if detached).
	Out    string `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	Signer string `protobuf:"bytes,5,opt,name=signer,proto3" json:"signer,omitempty"`
	// Armored, if true, output will be armored.
	Armored bool `protobuf:"varint,10,opt,name=armored,proto3" json:"armored,omitempty"`
	// Detached, if true, output will be just the signature.
	Detached bool `protobuf:"varint,11,opt,name=detached,proto3" json:"detached,omitempty"`
}

func (x *SignFileInput) Reset() {
	*x = SignFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignFileInput) ProtoMessage() {}

func (x *SignFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignFileInput.ProtoReflect.Descriptor instead.
func (*SignFileInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{2}
}

func (x *SignFileInput) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *SignFileInput) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

func (x *SignFileInput) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *SignFileInput) GetArmored() bool {
	if x != nil {
		return x.Armored
	}
	return false
}

func (x *SignFileInput) GetDetached() bool {
	if x != nil {
		return x.Detached
	}
	return false
}

type SignFileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KID   string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	Out   string `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	Bytes int32  `protobuf:"varint,10,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Total int32  `protobuf:"varint,11,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SignFileOutput) Reset() {
	*x = SignFileOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignFileOutput) ProtoMessage() {}

func (x *SignFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignFileOutput.ProtoReflect.Descriptor instead.
func (*SignFileOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{3}
}

func (x *SignFileOutput) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *SignFileOutput) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

func (x *SignFileOutput) GetBytes() int32 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *SignFileOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type VerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data is verified output.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type VerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data (if out is not specified in request).
	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Signer *Key   `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{5}
}

func (x *VerifyResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VerifyResponse) GetSigner() *Key {
	if x != nil {
		return x.Signer
	}
	return nil
}

type VerifyDetachedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data to verify.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sig  []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *VerifyDetachedRequest) Reset() {
	*x = VerifyDetachedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyDetachedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyDetachedRequest) ProtoMessage() {}

func (x *VerifyDetachedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyDetachedRequest.ProtoReflect.Descriptor instead.
func (*VerifyDetachedRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyDetachedRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VerifyDetachedRequest) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type VerifyDetachedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer *Key `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *VerifyDetachedResponse) Reset() {
	*x = VerifyDetachedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyDetachedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyDetachedResponse) ProtoMessage() {}

func (x *VerifyDetachedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyDetachedResponse.ProtoReflect.Descriptor instead.
func (*VerifyDetachedResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{7}
}

func (x *VerifyDetachedResponse) GetSigner() *Key {
	if x != nil {
		return x.Signer
	}
	return nil
}

type VerifyInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data to verify.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VerifyInput) Reset() {
	*x = VerifyInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyInput) ProtoMessage() {}

func (x *VerifyInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyInput.ProtoReflect.Descriptor instead.
func (*VerifyInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{8}
}

func (x *VerifyInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type VerifyOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data, verified. If empty, is EOF.
	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Signer *Key   `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *VerifyOutput) Reset() {
	*x = VerifyOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOutput) ProtoMessage() {}

func (x *VerifyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOutput.ProtoReflect.Descriptor instead.
func (*VerifyOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{9}
}

func (x *VerifyOutput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VerifyOutput) GetSigner() *Key {
	if x != nil {
		return x.Signer
	}
	return nil
}

type VerifyFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In is input file path.
	In string `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	// Out is the output file name or directory to save to.
	Out string `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
}

func (x *VerifyFileInput) Reset() {
	*x = VerifyFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyFileInput) ProtoMessage() {}

func (x *VerifyFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyFileInput.ProtoReflect.Descriptor instead.
func (*VerifyFileInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{10}
}

func (x *VerifyFileInput) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *VerifyFileInput) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

type VerifyFileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer *Key   `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Out    string `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
}

func (x *VerifyFileOutput) Reset() {
	*x = VerifyFileOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyFileOutput) ProtoMessage() {}

func (x *VerifyFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyFileOutput.ProtoReflect.Descriptor instead.
func (*VerifyFileOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{11}
}

func (x *VerifyFileOutput) GetSigner() *Key {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *VerifyFileOutput) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

type VerifyDetachedFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In is input file path.
	In string `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	// Signature (detached).
	Sig []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *VerifyDetachedFileInput) Reset() {
	*x = VerifyDetachedFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyDetachedFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyDetachedFileInput) ProtoMessage() {}

func (x *VerifyDetachedFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyDetachedFileInput.ProtoReflect.Descriptor instead.
func (*VerifyDetachedFileInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{12}
}

func (x *VerifyDetachedFileInput) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *VerifyDetachedFileInput) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type VerifyDetachedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data to verify.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Signature (detached).
	Sig []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *VerifyDetachedInput) Reset() {
	*x = VerifyDetachedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyDetachedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyDetachedInput) ProtoMessage() {}

func (x *VerifyDetachedInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyDetachedInput.ProtoReflect.Descriptor instead.
func (*VerifyDetachedInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{13}
}

func (x *VerifyDetachedInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VerifyDetachedInput) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Statement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sig is the signature bytes.
	Sig []byte `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	// Data that was signed.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// KID is the key that signed.
	KID string `protobuf:"bytes,3,opt,name=kid,proto3" json:"kid,omitempty"`
	// Seq in a sigchain (1 is root).
	Seq int32 `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	// Prev is a hash of the previous item in the sigchain.
	Prev []byte `protobuf:"bytes,5,opt,name=prev,proto3" json:"prev,omitempty"`
	// Revoke refers to a previous signed seq to revoke.
	Revoke int32 `protobuf:"varint,6,opt,name=revoke,proto3" json:"revoke,omitempty"`
	// Timestamp ...
	Timestamp int64 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Type (optional).
	Type string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Statement) Reset() {
	*x = Statement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{14}
}

func (x *Statement) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *Statement) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Statement) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *Statement) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Statement) GetPrev() []byte {
	if x != nil {
		return x.Prev
	}
	return nil
}

func (x *Statement) GetRevoke() int32 {
	if x != nil {
		return x.Revoke
	}
	return 0
}

func (x *Statement) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Statement) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SigchainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KID string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
}

func (x *SigchainRequest) Reset() {
	*x = SigchainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigchainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigchainRequest) ProtoMessage() {}

func (x *SigchainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigchainRequest.ProtoReflect.Descriptor instead.
func (*SigchainRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{15}
}

func (x *SigchainRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

type SigchainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        *Key         `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Statements []*Statement `protobuf:"bytes,2,rep,name=statements,proto3" json:"statements,omitempty"`
}

func (x *SigchainResponse) Reset() {
	*x = SigchainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigchainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigchainResponse) ProtoMessage() {}

func (x *SigchainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigchainResponse.ProtoReflect.Descriptor instead.
func (*SigchainResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{16}
}

func (x *SigchainResponse) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SigchainResponse) GetStatements() []*Statement {
	if x != nil {
		return x.Statements
	}
	return nil
}

type StatementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KID string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	Seq int32  `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *StatementRequest) Reset() {
	*x = StatementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatementRequest) ProtoMessage() {}

func (x *StatementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatementRequest.ProtoReflect.Descriptor instead.
func (*StatementRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{17}
}

func (x *StatementRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *StatementRequest) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type StatementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statement *Statement `protobuf:"bytes,1,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *StatementResponse) Reset() {
	*x = StatementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatementResponse) ProtoMessage() {}

func (x *StatementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatementResponse.ProtoReflect.Descriptor instead.
func (*StatementResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{18}
}

func (x *StatementResponse) GetStatement() *Statement {
	if x != nil {
		return x.Statement
	}
	return nil
}

type StatementCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	KID  string `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
	// Local, if true, won't save to the current key server.
	Local bool `protobuf:"varint,5,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *StatementCreateRequest) Reset() {
	*x = StatementCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatementCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatementCreateRequest) ProtoMessage() {}

func (x *StatementCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatementCreateRequest.ProtoReflect.Descriptor instead.
func (*StatementCreateRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{19}
}

func (x *StatementCreateRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StatementCreateRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *StatementCreateRequest) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type StatementCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statement *Statement `protobuf:"bytes,1,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *StatementCreateResponse) Reset() {
	*x = StatementCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatementCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatementCreateResponse) ProtoMessage() {}

func (x *StatementCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatementCreateResponse.ProtoReflect.Descriptor instead.
func (*StatementCreateResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{20}
}

func (x *StatementCreateResponse) GetStatement() *Statement {
	if x != nil {
		return x.Statement
	}
	return nil
}

type StatementRevokeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Seq to revoke.
	Seq int32  `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	KID string `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
	// Local, if true, won't save to the current key server.
	Local bool `protobuf:"varint,5,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *StatementRevokeRequest) Reset() {
	*x = StatementRevokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatementRevokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatementRevokeRequest) ProtoMessage() {}

func (x *StatementRevokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatementRevokeRequest.ProtoReflect.Descriptor instead.
func (*StatementRevokeRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{21}
}

func (x *StatementRevokeRequest) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *StatementRevokeRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *StatementRevokeRequest) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type StatementRevokeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statement *Statement `protobuf:"bytes,1,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *StatementRevokeResponse) Reset() {
	*x = StatementRevokeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatementRevokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatementRevokeResponse) ProtoMessage() {}

func (x *StatementRevokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatementRevokeResponse.ProtoReflect.Descriptor instead.
func (*StatementRevokeResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{22}
}

func (x *StatementRevokeResponse) GetStatement() *Statement {
	if x != nil {
		return x.Statement
	}
	return nil
}

type SignInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// In is input file path (if data is not specified).
	In string `protobuf:"bytes,2,opt,name=in,proto3" json:"in,omitempty"`
	// Out is output file path (required if in specified).
	Out    string `protobuf:"bytes,3,opt,name=out,proto3" json:"out,omitempty"`
	Signer string `protobuf:"bytes,5,opt,name=signer,proto3" json:"signer,omitempty"`
	// Armored, if true, output will be armored.
	Armored bool `protobuf:"varint,10,opt,name=armored,proto3" json:"armored,omitempty"`
	// Detached, if true, output will be just the signature.
	Detached bool `protobuf:"varint,11,opt,name=detached,proto3" json:"detached,omitempty"`
}

func (x *SignInput) Reset() {
	*x = SignInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInput) ProtoMessage() {}

func (x *SignInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInput.ProtoReflect.Descriptor instead.
func (*SignInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{23}
}

func (x *SignInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SignInput) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *SignInput) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

func (x *SignInput) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *SignInput) GetArmored() bool {
	if x != nil {
		return x.Armored
	}
	return false
}

func (x *SignInput) GetDetached() bool {
	if x != nil {
		return x.Detached
	}
	return false
}

type SignOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data, signed.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	KID  string `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
}

func (x *SignOutput) Reset() {
	*x = SignOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutput) ProtoMessage() {}

func (x *SignOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutput.ProtoReflect.Descriptor instead.
func (*SignOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{24}
}

func (x *SignOutput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SignOutput) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

type EncryptOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Armored, if true will return armored string output.
	Armored bool `protobuf:"varint,1,opt,name=armored,proto3" json:"armored,omitempty"`
	// Mode is the encryption mode.
	Mode EncryptMode `protobuf:"varint,2,opt,name=mode,proto3,enum=keys.EncryptMode" json:"mode,omitempty"`
	// NoSenderRecipient if true, won't add sender to recipients list.
	NoSenderRecipient bool `protobuf:"varint,3,opt,name=noSenderRecipient,proto3" json:"noSenderRecipient,omitempty"`
	// NoSign if true, won't sign with sender.
	NoSign bool `protobuf:"varint,4,opt,name=noSign,proto3" json:"noSign,omitempty"`
}

func (x *EncryptOptions) Reset() {
	*x = EncryptOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptOptions) ProtoMessage() {}

func (x *EncryptOptions) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptOptions.ProtoReflect.Descriptor instead.
func (*EncryptOptions) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{25}
}

func (x *EncryptOptions) GetArmored() bool {
	if x != nil {
		return x.Armored
	}
	return false
}

func (x *EncryptOptions) GetMode() EncryptMode {
	if x != nil {
		return x.Mode
	}
	return DefaultEncrypt
}

func (x *EncryptOptions) GetNoSenderRecipient() bool {
	if x != nil {
		return x.NoSenderRecipient
	}
	return false
}

func (x *EncryptOptions) GetNoSign() bool {
	if x != nil {
		return x.NoSign
	}
	return false
}

type EncryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data to encrypt.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Recipients to encrypt to.
	Recipients []string `protobuf:"bytes,3,rep,name=recipients,proto3" json:"recipients,omitempty"`
	// Sender, or anonymous.
	Sender string `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	// Options for encrypt.
	Options *EncryptOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *EncryptRequest) Reset() {
	*x = EncryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptRequest) ProtoMessage() {}

func (x *EncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptRequest.ProtoReflect.Descriptor instead.
func (*EncryptRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{26}
}

func (x *EncryptRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EncryptRequest) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *EncryptRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *EncryptRequest) GetOptions() *EncryptOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type EncryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Info string `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *EncryptResponse) Reset() {
	*x = EncryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptResponse) ProtoMessage() {}

func (x *EncryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptResponse.ProtoReflect.Descriptor instead.
func (*EncryptResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{27}
}

func (x *EncryptResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EncryptResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type EncryptFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In is input file path.
	In string `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	// Out is output file path.
	Out string `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	// Recipients to encrypt to.
	Recipients []string `protobuf:"bytes,3,rep,name=recipients,proto3" json:"recipients,omitempty"`
	// Sender, or anonymous.
	Sender string `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	// Options for encrypt.
	Options *EncryptOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *EncryptFileInput) Reset() {
	*x = EncryptFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptFileInput) ProtoMessage() {}

func (x *EncryptFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptFileInput.ProtoReflect.Descriptor instead.
func (*EncryptFileInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{28}
}

func (x *EncryptFileInput) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *EncryptFileInput) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

func (x *EncryptFileInput) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *EncryptFileInput) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *EncryptFileInput) GetOptions() *EncryptOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type EncryptFileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Out is the output decrypted file path.
	Out   string `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	Bytes int32  `protobuf:"varint,10,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Total int32  `protobuf:"varint,11,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *EncryptFileOutput) Reset() {
	*x = EncryptFileOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptFileOutput) ProtoMessage() {}

func (x *EncryptFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptFileOutput.ProtoReflect.Descriptor instead.
func (*EncryptFileOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{29}
}

func (x *EncryptFileOutput) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

func (x *EncryptFileOutput) GetBytes() int32 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *EncryptFileOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type EncryptInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data to encrypt. Send empty byte slice as last message.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Recipients to encrypt to.
	Recipients []string `protobuf:"bytes,3,rep,name=recipients,proto3" json:"recipients,omitempty"`
	// Sender, or anonymous.
	Sender string `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	// Options for encrypt.
	Options *EncryptOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *EncryptInput) Reset() {
	*x = EncryptInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptInput) ProtoMessage() {}

func (x *EncryptInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptInput.ProtoReflect.Descriptor instead.
func (*EncryptInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{30}
}

func (x *EncryptInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EncryptInput) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *EncryptInput) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *EncryptInput) GetOptions() *EncryptOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type EncryptOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data, encrypted.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EncryptOutput) Reset() {
	*x = EncryptOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptOutput) ProtoMessage() {}

func (x *EncryptOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptOutput.ProtoReflect.Descriptor instead.
func (*EncryptOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{31}
}

func (x *EncryptOutput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DecryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data to decrypt.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DecryptRequest) Reset() {
	*x = DecryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptRequest) ProtoMessage() {}

func (x *DecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptRequest.ProtoReflect.Descriptor instead.
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{32}
}

func (x *DecryptRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DecryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data decrypted.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Sender (if not anonymous)
	Sender *Key `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	// Mode is the encryption mode for the data.
	Mode EncryptMode `protobuf:"varint,5,opt,name=mode,proto3,enum=keys.EncryptMode" json:"mode,omitempty"`
}

func (x *DecryptResponse) Reset() {
	*x = DecryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptResponse) ProtoMessage() {}

func (x *DecryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptResponse.ProtoReflect.Descriptor instead.
func (*DecryptResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{33}
}

func (x *DecryptResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DecryptResponse) GetSender() *Key {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *DecryptResponse) GetMode() EncryptMode {
	if x != nil {
		return x.Mode
	}
	return DefaultEncrypt
}

type DecryptFileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In is the input encrypted file path.
	In string `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	// Out is the output file name or directory to save to.
	Out string `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
}

func (x *DecryptFileInput) Reset() {
	*x = DecryptFileInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptFileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptFileInput) ProtoMessage() {}

func (x *DecryptFileInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptFileInput.ProtoReflect.Descriptor instead.
func (*DecryptFileInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{34}
}

func (x *DecryptFileInput) GetIn() string {
	if x != nil {
		return x.In
	}
	return ""
}

func (x *DecryptFileInput) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

type DecryptFileOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender *Key `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// Out is the output file path.
	Out   string `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	Bytes int32  `protobuf:"varint,10,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Total int32  `protobuf:"varint,11,opt,name=total,proto3" json:"total,omitempty"`
	// Mode is the encryption mode we detected.
	Mode EncryptMode `protobuf:"varint,5,opt,name=mode,proto3,enum=keys.EncryptMode" json:"mode,omitempty"`
}

func (x *DecryptFileOutput) Reset() {
	*x = DecryptFileOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptFileOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptFileOutput) ProtoMessage() {}

func (x *DecryptFileOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptFileOutput.ProtoReflect.Descriptor instead.
func (*DecryptFileOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{35}
}

func (x *DecryptFileOutput) GetSender() *Key {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *DecryptFileOutput) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

func (x *DecryptFileOutput) GetBytes() int32 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *DecryptFileOutput) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DecryptFileOutput) GetMode() EncryptMode {
	if x != nil {
		return x.Mode
	}
	return DefaultEncrypt
}

type DecryptInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data, encrypted.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DecryptInput) Reset() {
	*x = DecryptInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptInput) ProtoMessage() {}

func (x *DecryptInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptInput.ProtoReflect.Descriptor instead.
func (*DecryptInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{36}
}

func (x *DecryptInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DecryptOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data, decrypted. If empty, is EOF.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Sender (if not anonymous)
	Sender *Key `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	// Mode is the encryption mode for the data.
	Mode EncryptMode `protobuf:"varint,5,opt,name=mode,proto3,enum=keys.EncryptMode" json:"mode,omitempty"`
}

func (x *DecryptOutput) Reset() {
	*x = DecryptOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptOutput) ProtoMessage() {}

func (x *DecryptOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptOutput.ProtoReflect.Descriptor instead.
func (*DecryptOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{37}
}

func (x *DecryptOutput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DecryptOutput) GetSender() *Key {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *DecryptOutput) GetMode() EncryptMode {
	if x != nil {
		return x.Mode
	}
	return DefaultEncrypt
}

type RuntimeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RuntimeStatusRequest) Reset() {
	*x = RuntimeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeStatusRequest) ProtoMessage() {}

func (x *RuntimeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeStatusRequest.ProtoReflect.Descriptor instead.
func (*RuntimeStatusRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{38}
}

type RuntimeStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version of running service.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// AppName app name.
	AppName string `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName,omitempty"`
	// Exe is the service executable path.
	Exe string `protobuf:"bytes,4,opt,name=exe,proto3" json:"exe,omitempty"`
	// AuthStatus is the status of auth.
	AuthStatus AuthStatus `protobuf:"varint,5,opt,name=authStatus,proto3,enum=keys.AuthStatus" json:"authStatus,omitempty"`
	// SyncStatus is the status of vault sync.
	Sync bool `protobuf:"varint,6,opt,name=sync,proto3" json:"sync,omitempty"`
	// FIDO2 available.
	FIDO2 bool `protobuf:"varint,20,opt,name=fido2,proto3" json:"fido2,omitempty"`
}

func (x *RuntimeStatusResponse) Reset() {
	*x = RuntimeStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeStatusResponse) ProtoMessage() {}

func (x *RuntimeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeStatusResponse.ProtoReflect.Descriptor instead.
func (*RuntimeStatusResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{39}
}

func (x *RuntimeStatusResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RuntimeStatusResponse) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *RuntimeStatusResponse) GetExe() string {
	if x != nil {
		return x.Exe
	}
	return ""
}

func (x *RuntimeStatusResponse) GetAuthStatus() AuthStatus {
	if x != nil {
		return x.AuthStatus
	}
	return AuthUnknown
}

func (x *RuntimeStatusResponse) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

func (x *RuntimeStatusResponse) GetFIDO2() bool {
	if x != nil {
		return x.FIDO2
	}
	return false
}

type AuthSetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secret for auth depending on auth type, e.g. password, FIDO2 pin, etc.
	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	// Type for auth.
	Type AuthType `protobuf:"varint,2,opt,name=type,proto3,enum=keys.AuthType" json:"type,omitempty"`
	// Device path (for FIDO2).
	Device string `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *AuthSetupRequest) Reset() {
	*x = AuthSetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthSetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthSetupRequest) ProtoMessage() {}

func (x *AuthSetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthSetupRequest.ProtoReflect.Descriptor instead.
func (*AuthSetupRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{40}
}

func (x *AuthSetupRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AuthSetupRequest) GetType() AuthType {
	if x != nil {
		return x.Type
	}
	return UnknownAuth
}

func (x *AuthSetupRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type AuthSetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthSetupResponse) Reset() {
	*x = AuthSetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthSetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthSetupResponse) ProtoMessage() {}

func (x *AuthSetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthSetupResponse.ProtoReflect.Descriptor instead.
func (*AuthSetupResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{41}
}

type AuthVaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phrase string `protobuf:"bytes,1,opt,name=phrase,proto3" json:"phrase,omitempty"`
}

func (x *AuthVaultRequest) Reset() {
	*x = AuthVaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthVaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthVaultRequest) ProtoMessage() {}

func (x *AuthVaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthVaultRequest.ProtoReflect.Descriptor instead.
func (*AuthVaultRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{42}
}

func (x *AuthVaultRequest) GetPhrase() string {
	if x != nil {
		return x.Phrase
	}
	return ""
}

type AuthVaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthVaultResponse) Reset() {
	*x = AuthVaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthVaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthVaultResponse) ProtoMessage() {}

func (x *AuthVaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthVaultResponse.ProtoReflect.Descriptor instead.
func (*AuthVaultResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{43}
}

type AuthUnlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secret for auth depending on auth type, e.g. password, pin, etc.
	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	// Type for auth.
	Type AuthType `protobuf:"varint,2,opt,name=type,proto3,enum=keys.AuthType" json:"type,omitempty"`
	// Client name.
	Client string `protobuf:"bytes,6,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *AuthUnlockRequest) Reset() {
	*x = AuthUnlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUnlockRequest) ProtoMessage() {}

func (x *AuthUnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUnlockRequest.ProtoReflect.Descriptor instead.
func (*AuthUnlockRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{44}
}

func (x *AuthUnlockRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AuthUnlockRequest) GetType() AuthType {
	if x != nil {
		return x.Type
	}
	return UnknownAuth
}

func (x *AuthUnlockRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

type AuthUnlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AuthToken to use for requests.
	AuthToken string `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`
}

func (x *AuthUnlockResponse) Reset() {
	*x = AuthUnlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUnlockResponse) ProtoMessage() {}

func (x *AuthUnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUnlockResponse.ProtoReflect.Descriptor instead.
func (*AuthUnlockResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{45}
}

func (x *AuthUnlockResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type AuthProvisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secret for auth depending on auth type, e.g. password, phrase, FIDO2 pin, etc.
	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	// Type for auth.
	Type AuthType `protobuf:"varint,2,opt,name=type,proto3,enum=keys.AuthType" json:"type,omitempty"`
	// Device path (for FIDO2).
	Device string `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`
	// Generate (for FIDO2 make credential).
	Generate bool `protobuf:"varint,7,opt,name=generate,proto3" json:"generate,omitempty"`
}

func (x *AuthProvisionRequest) Reset() {
	*x = AuthProvisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthProvisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProvisionRequest) ProtoMessage() {}

func (x *AuthProvisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthProvisionRequest.ProtoReflect.Descriptor instead.
func (*AuthProvisionRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{46}
}

func (x *AuthProvisionRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AuthProvisionRequest) GetType() AuthType {
	if x != nil {
		return x.Type
	}
	return UnknownAuth
}

func (x *AuthProvisionRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *AuthProvisionRequest) GetGenerate() bool {
	if x != nil {
		return x.Generate
	}
	return false
}

type AuthProvisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provision *AuthProvision `protobuf:"bytes,1,opt,name=provision,proto3" json:"provision,omitempty"`
}

func (x *AuthProvisionResponse) Reset() {
	*x = AuthProvisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthProvisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProvisionResponse) ProtoMessage() {}

func (x *AuthProvisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthProvisionResponse.ProtoReflect.Descriptor instead.
func (*AuthProvisionResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{47}
}

func (x *AuthProvisionResponse) GetProvision() *AuthProvision {
	if x != nil {
		return x.Provision
	}
	return nil
}

type AuthDeprovisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AuthDeprovisionRequest) Reset() {
	*x = AuthDeprovisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthDeprovisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthDeprovisionRequest) ProtoMessage() {}

func (x *AuthDeprovisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthDeprovisionRequest.ProtoReflect.Descriptor instead.
func (*AuthDeprovisionRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{48}
}

func (x *AuthDeprovisionRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type AuthDeprovisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthDeprovisionResponse) Reset() {
	*x = AuthDeprovisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthDeprovisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthDeprovisionResponse) ProtoMessage() {}

func (x *AuthDeprovisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthDeprovisionResponse.ProtoReflect.Descriptor instead.
func (*AuthDeprovisionResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{49}
}

type AuthPasswordChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old string `protobuf:"bytes,1,opt,name=old,proto3" json:"old,omitempty"`
	New string `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *AuthPasswordChangeRequest) Reset() {
	*x = AuthPasswordChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPasswordChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPasswordChangeRequest) ProtoMessage() {}

func (x *AuthPasswordChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPasswordChangeRequest.ProtoReflect.Descriptor instead.
func (*AuthPasswordChangeRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{50}
}

func (x *AuthPasswordChangeRequest) GetOld() string {
	if x != nil {
		return x.Old
	}
	return ""
}

func (x *AuthPasswordChangeRequest) GetNew() string {
	if x != nil {
		return x.New
	}
	return ""
}

type AuthPasswordChangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthPasswordChangeResponse) Reset() {
	*x = AuthPasswordChangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPasswordChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPasswordChangeResponse) ProtoMessage() {}

func (x *AuthPasswordChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPasswordChangeResponse.ProtoReflect.Descriptor instead.
func (*AuthPasswordChangeResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{51}
}

type AuthProvision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      AuthType `protobuf:"varint,2,opt,name=type,proto3,enum=keys.AuthType" json:"type,omitempty"`
	CreatedAt int64    `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// For FIDO2
	// AAGUID is a device "identifier" (only unique across batches for privacy reasons).
	AAGUID string `protobuf:"bytes,100,opt,name=aaguid,proto3" json:"aaguid,omitempty"`
	NoPin  bool   `protobuf:"varint,101,opt,name=noPin,proto3" json:"noPin,omitempty"`
}

func (x *AuthProvision) Reset() {
	*x = AuthProvision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthProvision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProvision) ProtoMessage() {}

func (x *AuthProvision) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthProvision.ProtoReflect.Descriptor instead.
func (*AuthProvision) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{52}
}

func (x *AuthProvision) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AuthProvision) GetType() AuthType {
	if x != nil {
		return x.Type
	}
	return UnknownAuth
}

func (x *AuthProvision) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AuthProvision) GetAAGUID() string {
	if x != nil {
		return x.AAGUID
	}
	return ""
}

func (x *AuthProvision) GetNoPin() bool {
	if x != nil {
		return x.NoPin
	}
	return false
}

type AuthProvisionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthProvisionsRequest) Reset() {
	*x = AuthProvisionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthProvisionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProvisionsRequest) ProtoMessage() {}

func (x *AuthProvisionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthProvisionsRequest.ProtoReflect.Descriptor instead.
func (*AuthProvisionsRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{53}
}

type AuthProvisionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provisions []*AuthProvision `protobuf:"bytes,1,rep,name=provisions,proto3" json:"provisions,omitempty"`
}

func (x *AuthProvisionsResponse) Reset() {
	*x = AuthProvisionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthProvisionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProvisionsResponse) ProtoMessage() {}

func (x *AuthProvisionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthProvisionsResponse.ProtoReflect.Descriptor instead.
func (*AuthProvisionsResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{54}
}

func (x *AuthProvisionsResponse) GetProvisions() []*AuthProvision {
	if x != nil {
		return x.Provisions
	}
	return nil
}

type AuthLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthLockRequest) Reset() {
	*x = AuthLockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthLockRequest) ProtoMessage() {}

func (x *AuthLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthLockRequest.ProtoReflect.Descriptor instead.
func (*AuthLockRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{55}
}

type AuthLockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthLockResponse) Reset() {
	*x = AuthLockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthLockResponse) ProtoMessage() {}

func (x *AuthLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthLockResponse.ProtoReflect.Descriptor instead.
func (*AuthLockResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{56}
}

type AuthResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName string `protobuf:"bytes,1,opt,name=appName,proto3" json:"appName,omitempty"`
}

func (x *AuthResetRequest) Reset() {
	*x = AuthResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResetRequest) ProtoMessage() {}

func (x *AuthResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResetRequest.ProtoReflect.Descriptor instead.
func (*AuthResetRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{57}
}

func (x *AuthResetRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type AuthResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthResetResponse) Reset() {
	*x = AuthResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResetResponse) ProtoMessage() {}

func (x *AuthResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResetResponse.ProtoReflect.Descriptor instead.
func (*AuthResetResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{58}
}

type AuthRecoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperKey    string `protobuf:"bytes,1,opt,name=paperKey,proto3" json:"paperKey,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *AuthRecoverRequest) Reset() {
	*x = AuthRecoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRecoverRequest) ProtoMessage() {}

func (x *AuthRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRecoverRequest.ProtoReflect.Descriptor instead.
func (*AuthRecoverRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{59}
}

func (x *AuthRecoverRequest) GetPaperKey() string {
	if x != nil {
		return x.PaperKey
	}
	return ""
}

func (x *AuthRecoverRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type AuthRecoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken string `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`
}

func (x *AuthRecoverResponse) Reset() {
	*x = AuthRecoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRecoverResponse) ProtoMessage() {}

func (x *AuthRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRecoverResponse.ProtoReflect.Descriptor instead.
func (*AuthRecoverResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{60}
}

func (x *AuthRecoverResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type KeyGenerateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *KeyGenerateRequest) Reset() {
	*x = KeyGenerateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyGenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyGenerateRequest) ProtoMessage() {}

func (x *KeyGenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyGenerateRequest.ProtoReflect.Descriptor instead.
func (*KeyGenerateRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{61}
}

func (x *KeyGenerateRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type KeyGenerateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KID string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
}

func (x *KeyGenerateResponse) Reset() {
	*x = KeyGenerateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyGenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyGenerateResponse) ProtoMessage() {}

func (x *KeyGenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyGenerateResponse.ProtoReflect.Descriptor instead.
func (*KeyGenerateResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{62}
}

func (x *KeyGenerateResponse) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

type UserServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// KID to use, or if empty the current key.
	KID string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	// Service such as twitter, github.
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *UserServiceRequest) Reset() {
	*x = UserServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceRequest) ProtoMessage() {}

func (x *UserServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceRequest.ProtoReflect.Descriptor instead.
func (*UserServiceRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{63}
}

func (x *UserServiceRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *UserServiceRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type UserServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service such as twitter, github.
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *UserServiceResponse) Reset() {
	*x = UserServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserServiceResponse) ProtoMessage() {}

func (x *UserServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserServiceResponse.ProtoReflect.Descriptor instead.
func (*UserServiceResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{64}
}

func (x *UserServiceResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type UserSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// KID to use, or if empty the current key.
	KID string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	// Service such as twitter, github.
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	// Name is username on the service.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserSignRequest) Reset() {
	*x = UserSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignRequest) ProtoMessage() {}

func (x *UserSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignRequest.ProtoReflect.Descriptor instead.
func (*UserSignRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{65}
}

func (x *UserSignRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *UserSignRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *UserSignRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message is signed message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Name in request.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserSignResponse) Reset() {
	*x = UserSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignResponse) ProtoMessage() {}

func (x *UserSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignResponse.ProtoReflect.Descriptor instead.
func (*UserSignResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{66}
}

func (x *UserSignResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserSignResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// KID to use, or if empty the current key.
	KID string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	// Service such as twitter, github.
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	// Name is username on the service.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// URL is location of signed message on the service.
	URL string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// Local, if true, won't save to the current key server.
	Local bool `protobuf:"varint,5,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *UserAddRequest) Reset() {
	*x = UserAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddRequest) ProtoMessage() {}

func (x *UserAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddRequest.ProtoReflect.Descriptor instead.
func (*UserAddRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{67}
}

func (x *UserAddRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *UserAddRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *UserAddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAddRequest) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *UserAddRequest) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type UserAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      *User      `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Statement *Statement `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *UserAddResponse) Reset() {
	*x = UserAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddResponse) ProtoMessage() {}

func (x *UserAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddResponse.ProtoReflect.Descriptor instead.
func (*UserAddResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{68}
}

func (x *UserAddResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserAddResponse) GetStatement() *Statement {
	if x != nil {
		return x.Statement
	}
	return nil
}

type KeyExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KID        string     `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	Password   string     `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Type       ExportType `protobuf:"varint,3,opt,name=type,proto3,enum=keys.ExportType" json:"type,omitempty"`
	Public     bool       `protobuf:"varint,4,opt,name=public,proto3" json:"public,omitempty"`
	NoPassword bool       `protobuf:"varint,5,opt,name=noPassword,proto3" json:"noPassword,omitempty"`
}

func (x *KeyExportRequest) Reset() {
	*x = KeyExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyExportRequest) ProtoMessage() {}

func (x *KeyExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyExportRequest.ProtoReflect.Descriptor instead.
func (*KeyExportRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{69}
}

func (x *KeyExportRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *KeyExportRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *KeyExportRequest) GetType() ExportType {
	if x != nil {
		return x.Type
	}
	return DefaultExport
}

func (x *KeyExportRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *KeyExportRequest) GetNoPassword() bool {
	if x != nil {
		return x.NoPassword
	}
	return false
}

type KeyExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export []byte `protobuf:"bytes,1,opt,name=export,proto3" json:"export,omitempty"`
}

func (x *KeyExportResponse) Reset() {
	*x = KeyExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyExportResponse) ProtoMessage() {}

func (x *KeyExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyExportResponse.ProtoReflect.Descriptor instead.
func (*KeyExportResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{70}
}

func (x *KeyExportResponse) GetExport() []byte {
	if x != nil {
		return x.Export
	}
	return nil
}

type KeyImportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	In       []byte `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *KeyImportRequest) Reset() {
	*x = KeyImportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyImportRequest) ProtoMessage() {}

func (x *KeyImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyImportRequest.ProtoReflect.Descriptor instead.
func (*KeyImportRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{71}
}

func (x *KeyImportRequest) GetIn() []byte {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *KeyImportRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type KeyImportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KID string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
}

func (x *KeyImportResponse) Reset() {
	*x = KeyImportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyImportResponse) ProtoMessage() {}

func (x *KeyImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyImportResponse.ProtoReflect.Descriptor instead.
func (*KeyImportResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{72}
}

func (x *KeyImportResponse) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

type KeyRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// KID of key to remove.
	KID string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
}

func (x *KeyRemoveRequest) Reset() {
	*x = KeyRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRemoveRequest) ProtoMessage() {}

func (x *KeyRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRemoveRequest.ProtoReflect.Descriptor instead.
func (*KeyRemoveRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{73}
}

func (x *KeyRemoveRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

type KeyRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KeyRemoveResponse) Reset() {
	*x = KeyRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRemoveResponse) ProtoMessage() {}

func (x *KeyRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRemoveResponse.ProtoReflect.Descriptor instead.
func (*KeyRemoveResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{74}
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID identifier.
	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Type of key.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// IsPrivate if private key.
	IsPrivate bool `protobuf:"varint,4,opt,name=isPrivate,proto3" json:"isPrivate,omitempty"`
	// User associated with this key.
	User *User `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	// Saved if saved locally.
	Saved bool `protobuf:"varint,10,opt,name=saved,proto3" json:"saved,omitempty"`
	// SigchainLength is length of sigchain (if any).
	SigchainLength    int32 `protobuf:"varint,40,opt,name=sigchainLength,proto3" json:"sigchainLength,omitempty"`
	SigchainUpdatedAt int64 `protobuf:"varint,41,opt,name=sigchainUpdatedAt,proto3" json:"sigchainUpdatedAt,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{75}
}

func (x *Key) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Key) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Key) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *Key) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Key) GetSaved() bool {
	if x != nil {
		return x.Saved
	}
	return false
}

func (x *Key) GetSigchainLength() int32 {
	if x != nil {
		return x.SigchainLength
	}
	return 0
}

func (x *Key) GetSigchainUpdatedAt() int64 {
	if x != nil {
		return x.SigchainUpdatedAt
	}
	return 0
}

type KeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key can be kid or user@service.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Search, if true, will search for the key on the server.
	Search bool `protobuf:"varint,4,opt,name=search,proto3" json:"search,omitempty"`
	// Update, if true, will update the sigchain from the server.
	Update bool `protobuf:"varint,5,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *KeyRequest) Reset() {
	*x = KeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRequest) ProtoMessage() {}

func (x *KeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRequest.ProtoReflect.Descriptor instead.
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{76}
}

func (x *KeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyRequest) GetSearch() bool {
	if x != nil {
		return x.Search
	}
	return false
}

func (x *KeyRequest) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

type KeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *Key `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *KeyResponse) Reset() {
	*x = KeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyResponse) ProtoMessage() {}

func (x *KeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyResponse.ProtoReflect.Descriptor instead.
func (*KeyResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{77}
}

func (x *KeyResponse) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

type KeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query         string        `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Types         []string      `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	SortField     string        `protobuf:"bytes,10,opt,name=sortField,proto3" json:"sortField,omitempty"`
	SortDirection SortDirection `protobuf:"varint,11,opt,name=sortDirection,proto3,enum=keys.SortDirection" json:"sortDirection,omitempty"`
}

func (x *KeysRequest) Reset() {
	*x = KeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeysRequest) ProtoMessage() {}

func (x *KeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeysRequest.ProtoReflect.Descriptor instead.
func (*KeysRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{78}
}

func (x *KeysRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *KeysRequest) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *KeysRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *KeysRequest) GetSortDirection() SortDirection {
	if x != nil {
		return x.SortDirection
	}
	return SortAsc
}

type KeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys          []*Key        `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	SortField     string        `protobuf:"bytes,10,opt,name=sortField,proto3" json:"sortField,omitempty"`
	SortDirection SortDirection `protobuf:"varint,11,opt,name=sortDirection,proto3,enum=keys.SortDirection" json:"sortDirection,omitempty"`
}

func (x *KeysResponse) Reset() {
	*x = KeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeysResponse) ProtoMessage() {}

func (x *KeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeysResponse.ProtoReflect.Descriptor instead.
func (*KeysResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{79}
}

func (x *KeysResponse) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *KeysResponse) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *KeysResponse) GetSortDirection() SortDirection {
	if x != nil {
		return x.SortDirection
	}
	return SortAsc
}

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type      SecretType `protobuf:"varint,3,opt,name=type,proto3,enum=keys.SecretType" json:"type,omitempty"`
	Username  string     `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	Password  string     `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	URL       string     `protobuf:"bytes,20,opt,name=url,proto3" json:"url,omitempty"`
	Notes     string     `protobuf:"bytes,30,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt int64      `protobuf:"varint,100,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64      `protobuf:"varint,101,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{80}
}

func (x *Secret) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret) GetType() SecretType {
	if x != nil {
		return x.Type
	}
	return UnknownSecret
}

func (x *Secret) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Secret) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Secret) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Secret) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Secret) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Secret) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type SecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SecretRequest) Reset() {
	*x = SecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretRequest) ProtoMessage() {}

func (x *SecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretRequest.ProtoReflect.Descriptor instead.
func (*SecretRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{81}
}

func (x *SecretRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type SecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret *Secret `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *SecretResponse) Reset() {
	*x = SecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretResponse) ProtoMessage() {}

func (x *SecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretResponse.ProtoReflect.Descriptor instead.
func (*SecretResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{82}
}

func (x *SecretResponse) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type SecretSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret *Secret `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *SecretSaveRequest) Reset() {
	*x = SecretSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretSaveRequest) ProtoMessage() {}

func (x *SecretSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretSaveRequest.ProtoReflect.Descriptor instead.
func (*SecretSaveRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{83}
}

func (x *SecretSaveRequest) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type SecretSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret *Secret `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *SecretSaveResponse) Reset() {
	*x = SecretSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretSaveResponse) ProtoMessage() {}

func (x *SecretSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretSaveResponse.ProtoReflect.Descriptor instead.
func (*SecretSaveResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{84}
}

func (x *SecretSaveResponse) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type SecretRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SecretRemoveRequest) Reset() {
	*x = SecretRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretRemoveRequest) ProtoMessage() {}

func (x *SecretRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretRemoveRequest.ProtoReflect.Descriptor instead.
func (*SecretRemoveRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{85}
}

func (x *SecretRemoveRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type SecretRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecretRemoveResponse) Reset() {
	*x = SecretRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretRemoveResponse) ProtoMessage() {}

func (x *SecretRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretRemoveResponse.ProtoReflect.Descriptor instead.
func (*SecretRemoveResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{86}
}

type SecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query         string        `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	SortField     string        `protobuf:"bytes,10,opt,name=sortField,proto3" json:"sortField,omitempty"`
	SortDirection SortDirection `protobuf:"varint,11,opt,name=sortDirection,proto3,enum=keys.SortDirection" json:"sortDirection,omitempty"`
}

func (x *SecretsRequest) Reset() {
	*x = SecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretsRequest) ProtoMessage() {}

func (x *SecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretsRequest.ProtoReflect.Descriptor instead.
func (*SecretsRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{87}
}

func (x *SecretsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SecretsRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *SecretsRequest) GetSortDirection() SortDirection {
	if x != nil {
		return x.SortDirection
	}
	return SortAsc
}

type SecretsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secrets       []*Secret     `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty"`
	SortField     string        `protobuf:"bytes,10,opt,name=sortField,proto3" json:"sortField,omitempty"`
	SortDirection SortDirection `protobuf:"varint,11,opt,name=sortDirection,proto3,enum=keys.SortDirection" json:"sortDirection,omitempty"`
}

func (x *SecretsResponse) Reset() {
	*x = SecretsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretsResponse) ProtoMessage() {}

func (x *SecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretsResponse.ProtoReflect.Descriptor instead.
func (*SecretsResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{88}
}

func (x *SecretsResponse) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *SecretsResponse) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *SecretsResponse) GetSortDirection() SortDirection {
	if x != nil {
		return x.SortDirection
	}
	return SortAsc
}

type RandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumBytes  int32    `protobuf:"varint,1,opt,name=numBytes,proto3" json:"numBytes,omitempty"`
	Encoding  Encoding `protobuf:"varint,2,opt,name=encoding,proto3,enum=keys.Encoding" json:"encoding,omitempty"`
	NoPadding bool     `protobuf:"varint,10,opt,name=noPadding,proto3" json:"noPadding,omitempty"`
	Lowercase bool     `protobuf:"varint,11,opt,name=lowercase,proto3" json:"lowercase,omitempty"`
}

func (x *RandRequest) Reset() {
	*x = RandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandRequest) ProtoMessage() {}

func (x *RandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandRequest.ProtoReflect.Descriptor instead.
func (*RandRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{89}
}

func (x *RandRequest) GetNumBytes() int32 {
	if x != nil {
		return x.NumBytes
	}
	return 0
}

func (x *RandRequest) GetEncoding() Encoding {
	if x != nil {
		return x.Encoding
	}
	return Hex
}

func (x *RandRequest) GetNoPadding() bool {
	if x != nil {
		return x.NoPadding
	}
	return false
}

func (x *RandRequest) GetLowercase() bool {
	if x != nil {
		return x.Lowercase
	}
	return false
}

type RandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RandResponse) Reset() {
	*x = RandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandResponse) ProtoMessage() {}

func (x *RandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandResponse.ProtoReflect.Descriptor instead.
func (*RandResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{90}
}

func (x *RandResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type RandPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length int32 `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *RandPasswordRequest) Reset() {
	*x = RandPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandPasswordRequest) ProtoMessage() {}

func (x *RandPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandPasswordRequest.ProtoReflect.Descriptor instead.
func (*RandPasswordRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{91}
}

func (x *RandPasswordRequest) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type RandPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RandPasswordResponse) Reset() {
	*x = RandPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandPasswordResponse) ProtoMessage() {}

func (x *RandPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandPasswordResponse.ProtoReflect.Descriptor instead.
func (*RandPasswordResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{92}
}

func (x *RandPasswordResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type PullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *PullRequest) Reset() {
	*x = PullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequest) ProtoMessage() {}

func (x *PullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequest.ProtoReflect.Descriptor instead.
func (*PullRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{93}
}

func (x *PullRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type PullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KIDs []string `protobuf:"bytes,1,rep,name=kids,proto3" json:"kids,omitempty"`
}

func (x *PullResponse) Reset() {
	*x = PullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullResponse) ProtoMessage() {}

func (x *PullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullResponse.ProtoReflect.Descriptor instead.
func (*PullResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{94}
}

func (x *PullResponse) GetKIDs() []string {
	if x != nil {
		return x.KIDs
	}
	return nil
}

type PushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RemoteCheck bool   `protobuf:"varint,2,opt,name=remoteCheck,proto3" json:"remoteCheck,omitempty"`
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{95}
}

func (x *PushRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PushRequest) GetRemoteCheck() bool {
	if x != nil {
		return x.RemoteCheck
	}
	return false
}

type PushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KID  string   `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	URLs []string `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *PushResponse) Reset() {
	*x = PushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushResponse) ProtoMessage() {}

func (x *PushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushResponse.ProtoReflect.Descriptor instead.
func (*PushResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{96}
}

func (x *PushResponse) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *PushResponse) GetURLs() []string {
	if x != nil {
		return x.URLs
	}
	return nil
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{97}
}

func (x *Collection) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type CollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// DB is "service" or "vault".
	DB string `protobuf:"bytes,5,opt,name=db,proto3" json:"db,omitempty"`
}

func (x *CollectionsRequest) Reset() {
	*x = CollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionsRequest) ProtoMessage() {}

func (x *CollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionsRequest.ProtoReflect.Descriptor instead.
func (*CollectionsRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{98}
}

func (x *CollectionsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CollectionsRequest) GetDB() string {
	if x != nil {
		return x.DB
	}
	return ""
}

type CollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *CollectionsResponse) Reset() {
	*x = CollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionsResponse) ProtoMessage() {}

func (x *CollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionsResponse.ProtoReflect.Descriptor instead.
func (*CollectionsResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{99}
}

func (x *CollectionsResponse) GetCollections() []*Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{100}
}

func (x *Document) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Document) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Document) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Document) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type DocumentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// DB is "service" or "vault".
	DB string `protobuf:"bytes,5,opt,name=db,proto3" json:"db,omitempty"`
}

func (x *DocumentsRequest) Reset() {
	*x = DocumentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentsRequest) ProtoMessage() {}

func (x *DocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentsRequest.ProtoReflect.Descriptor instead.
func (*DocumentsRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{101}
}

func (x *DocumentsRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *DocumentsRequest) GetDB() string {
	if x != nil {
		return x.DB
	}
	return ""
}

type DocumentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *DocumentsResponse) Reset() {
	*x = DocumentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentsResponse) ProtoMessage() {}

func (x *DocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentsResponse.ProtoReflect.Descriptor instead.
func (*DocumentsResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{102}
}

func (x *DocumentsResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type DocumentDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	DB   string `protobuf:"bytes,5,opt,name=db,proto3" json:"db,omitempty"`
}

func (x *DocumentDeleteRequest) Reset() {
	*x = DocumentDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentDeleteRequest) ProtoMessage() {}

func (x *DocumentDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentDeleteRequest.ProtoReflect.Descriptor instead.
func (*DocumentDeleteRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{103}
}

func (x *DocumentDeleteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DocumentDeleteRequest) GetDB() string {
	if x != nil {
		return x.DB
	}
	return ""
}

type DocumentDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DocumentDeleteResponse) Reset() {
	*x = DocumentDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentDeleteResponse) ProtoMessage() {}

func (x *DocumentDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentDeleteResponse.ProtoReflect.Descriptor instead.
func (*DocumentDeleteResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{104}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	KID        string     `protobuf:"bytes,3,opt,name=kid,proto3" json:"kid,omitempty"`
	Seq        int32      `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	Service    string     `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	URL        string     `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Status     UserStatus `protobuf:"varint,10,opt,name=status,proto3,enum=keys.UserStatus" json:"status,omitempty"`
	VerifiedAt int64      `protobuf:"varint,11,opt,name=verifiedAt,proto3" json:"verifiedAt,omitempty"`
	Timestamp  int64      `protobuf:"varint,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Err        string     `protobuf:"bytes,20,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{105}
}

func (x *User) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *User) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *User) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *User) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *User) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatusUnknown
}

func (x *User) GetVerifiedAt() int64 {
	if x != nil {
		return x.VerifiedAt
	}
	return 0
}

func (x *User) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *User) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type UserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KID   string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	Local bool   `protobuf:"varint,4,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{106}
}

func (x *UserRequest) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *UserRequest) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{107}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Limit int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Local bool   `protobuf:"varint,4,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *UserSearchRequest) Reset() {
	*x = UserSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSearchRequest) ProtoMessage() {}

func (x *UserSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSearchRequest.ProtoReflect.Descriptor instead.
func (*UserSearchRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{108}
}

func (x *UserSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UserSearchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *UserSearchRequest) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

type UserSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserSearchResponse) Reset() {
	*x = UserSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSearchResponse) ProtoMessage() {}

func (x *UserSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSearchResponse.ProtoReflect.Descriptor instead.
func (*UserSearchResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{109}
}

func (x *UserSearchResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{110}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{111}
}

func (x *SearchResponse) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type VaultSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VaultSyncRequest) Reset() {
	*x = VaultSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultSyncRequest) ProtoMessage() {}

func (x *VaultSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultSyncRequest.ProtoReflect.Descriptor instead.
func (*VaultSyncRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{112}
}

type VaultSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VaultSyncResponse) Reset() {
	*x = VaultSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultSyncResponse) ProtoMessage() {}

func (x *VaultSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultSyncResponse.ProtoReflect.Descriptor instead.
func (*VaultSyncResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{113}
}

type VaultUnsyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VaultUnsyncRequest) Reset() {
	*x = VaultUnsyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultUnsyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultUnsyncRequest) ProtoMessage() {}

func (x *VaultUnsyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultUnsyncRequest.ProtoReflect.Descriptor instead.
func (*VaultUnsyncRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{114}
}

type VaultUnsyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VaultUnsyncResponse) Reset() {
	*x = VaultUnsyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultUnsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultUnsyncResponse) ProtoMessage() {}

func (x *VaultUnsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultUnsyncResponse.ProtoReflect.Descriptor instead.
func (*VaultUnsyncResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{115}
}

type VaultAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VaultAuthRequest) Reset() {
	*x = VaultAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultAuthRequest) ProtoMessage() {}

func (x *VaultAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultAuthRequest.ProtoReflect.Descriptor instead.
func (*VaultAuthRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{116}
}

type VaultAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phrase string `protobuf:"bytes,1,opt,name=phrase,proto3" json:"phrase,omitempty"`
}

func (x *VaultAuthResponse) Reset() {
	*x = VaultAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultAuthResponse) ProtoMessage() {}

func (x *VaultAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultAuthResponse.ProtoReflect.Descriptor instead.
func (*VaultAuthResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{117}
}

func (x *VaultAuthResponse) GetPhrase() string {
	if x != nil {
		return x.Phrase
	}
	return ""
}

type VaultStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VaultStatusRequest) Reset() {
	*x = VaultStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultStatusRequest) ProtoMessage() {}

func (x *VaultStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultStatusRequest.ProtoReflect.Descriptor instead.
func (*VaultStatusRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{118}
}

type VaultStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KID      string `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	SyncedAt int64  `protobuf:"varint,2,opt,name=syncedAt,proto3" json:"syncedAt,omitempty"`
}

func (x *VaultStatusResponse) Reset() {
	*x = VaultStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultStatusResponse) ProtoMessage() {}

func (x *VaultStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultStatusResponse.ProtoReflect.Descriptor instead.
func (*VaultStatusResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{119}
}

func (x *VaultStatusResponse) GetKID() string {
	if x != nil {
		return x.KID
	}
	return ""
}

func (x *VaultStatusResponse) GetSyncedAt() int64 {
	if x != nil {
		return x.SyncedAt
	}
	return 0
}

type VaultUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VaultUpdateRequest) Reset() {
	*x = VaultUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultUpdateRequest) ProtoMessage() {}

func (x *VaultUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultUpdateRequest.ProtoReflect.Descriptor instead.
func (*VaultUpdateRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{120}
}

type VaultUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VaultUpdateResponse) Reset() {
	*x = VaultUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VaultUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaultUpdateResponse) ProtoMessage() {}

func (x *VaultUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaultUpdateResponse.ProtoReflect.Descriptor instead.
func (*VaultUpdateResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{121}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender    *Key          `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Text      []string      `protobuf:"bytes,10,rep,name=text,proto3" json:"text,omitempty"`
	Status    MessageStatus `protobuf:"varint,20,opt,name=status,proto3,enum=keys.MessageStatus" json:"status,omitempty"`
	CreatedAt int64         `protobuf:"varint,31,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{122}
}

func (x *Message) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Message) GetSender() *Key {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Message) GetText() []string {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *Message) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageSent
}

func (x *Message) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type MessagePrepareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Channel string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Text    string `protobuf:"bytes,11,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *MessagePrepareRequest) Reset() {
	*x = MessagePrepareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePrepareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePrepareRequest) ProtoMessage() {}

func (x *MessagePrepareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePrepareRequest.ProtoReflect.Descriptor instead.
func (*MessagePrepareRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{123}
}

func (x *MessagePrepareRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MessagePrepareRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *MessagePrepareRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type MessagePrepareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MessagePrepareResponse) Reset() {
	*x = MessagePrepareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePrepareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePrepareResponse) ProtoMessage() {}

func (x *MessagePrepareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePrepareResponse.ProtoReflect.Descriptor instead.
func (*MessagePrepareResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{124}
}

func (x *MessagePrepareResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type MessageCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Channel string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	// ID is optional, if message was prepared you can use that ID, otherwise it
	// is autogenerated.
	ID   string `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	Text string `protobuf:"bytes,11,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *MessageCreateRequest) Reset() {
	*x = MessageCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCreateRequest) ProtoMessage() {}

func (x *MessageCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCreateRequest.ProtoReflect.Descriptor instead.
func (*MessageCreateRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{125}
}

func (x *MessageCreateRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MessageCreateRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *MessageCreateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MessageCreateRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type MessageCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MessageCreateResponse) Reset() {
	*x = MessageCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCreateResponse) ProtoMessage() {}

func (x *MessageCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCreateResponse.ProtoReflect.Descriptor instead.
func (*MessageCreateResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{126}
}

func (x *MessageCreateResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type MessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	User    string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// Update, if true will update from the server.
	Update bool `protobuf:"varint,5,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *MessagesRequest) Reset() {
	*x = MessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesRequest) ProtoMessage() {}

func (x *MessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesRequest.ProtoReflect.Descriptor instead.
func (*MessagesRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{127}
}

func (x *MessagesRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *MessagesRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MessagesRequest) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

type MessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *MessagesResponse) Reset() {
	*x = MessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesResponse) ProtoMessage() {}

func (x *MessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesResponse.ProtoReflect.Descriptor instead.
func (*MessagesResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{128}
}

func (x *MessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type RelayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *RelayRequest) Reset() {
	*x = RelayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayRequest) ProtoMessage() {}

func (x *RelayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayRequest.ProtoReflect.Descriptor instead.
func (*RelayRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{129}
}

func (x *RelayRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RelayOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    RelayType `protobuf:"varint,1,opt,name=type,proto3,enum=keys.RelayType" json:"type,omitempty"`
	Channel string    `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	User    string    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Index   int64     `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *RelayOutput) Reset() {
	*x = RelayOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayOutput) ProtoMessage() {}

func (x *RelayOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayOutput.ProtoReflect.Descriptor instead.
func (*RelayOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{130}
}

func (x *RelayOutput) GetType() RelayType {
	if x != nil {
		return x.Type
	}
	return RelayUnspecified
}

func (x *RelayOutput) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *RelayOutput) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RelayOutput) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Snippet   string `protobuf:"bytes,3,opt,name=snippet,proto3" json:"snippet,omitempty"`
	UpdatedAt int64  `protobuf:"varint,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Index     int64  `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{131}
}

func (x *Channel) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Channel) GetSnippet() string {
	if x != nil {
		return x.Snippet
	}
	return ""
}

func (x *Channel) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Channel) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ChannelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChannelsRequest) Reset() {
	*x = ChannelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelsRequest) ProtoMessage() {}

func (x *ChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelsRequest.ProtoReflect.Descriptor instead.
func (*ChannelsRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{132}
}

func (x *ChannelsRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ChannelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels []*Channel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *ChannelsResponse) Reset() {
	*x = ChannelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelsResponse) ProtoMessage() {}

func (x *ChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelsResponse.ProtoReflect.Descriptor instead.
func (*ChannelsResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{133}
}

func (x *ChannelsResponse) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

type ChannelCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	User string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChannelCreateRequest) Reset() {
	*x = ChannelCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCreateRequest) ProtoMessage() {}

func (x *ChannelCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCreateRequest.ProtoReflect.Descriptor instead.
func (*ChannelCreateRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{134}
}

func (x *ChannelCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelCreateRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ChannelCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *ChannelCreateResponse) Reset() {
	*x = ChannelCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCreateResponse) ProtoMessage() {}

func (x *ChannelCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCreateResponse.ProtoReflect.Descriptor instead.
func (*ChannelCreateResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{135}
}

func (x *ChannelCreateResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ChannelUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *Key `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ChannelUser) Reset() {
	*x = ChannelUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUser) ProtoMessage() {}

func (x *ChannelUser) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUser.ProtoReflect.Descriptor instead.
func (*ChannelUser) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{136}
}

func (x *ChannelUser) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

type ChannelUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	User    string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChannelUsersRequest) Reset() {
	*x = ChannelUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUsersRequest) ProtoMessage() {}

func (x *ChannelUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUsersRequest.ProtoReflect.Descriptor instead.
func (*ChannelUsersRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{137}
}

func (x *ChannelUsersRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChannelUsersRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ChannelUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*ChannelUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ChannelUsersResponse) Reset() {
	*x = ChannelUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUsersResponse) ProtoMessage() {}

func (x *ChannelUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUsersResponse.ProtoReflect.Descriptor instead.
func (*ChannelUsersResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{138}
}

func (x *ChannelUsersResponse) GetUsers() []*ChannelUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type ChannelInvitesCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel    string   `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Sender     string   `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipients []string `protobuf:"bytes,3,rep,name=recipients,proto3" json:"recipients,omitempty"`
}

func (x *ChannelInvitesCreateRequest) Reset() {
	*x = ChannelInvitesCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInvitesCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInvitesCreateRequest) ProtoMessage() {}

func (x *ChannelInvitesCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInvitesCreateRequest.ProtoReflect.Descriptor instead.
func (*ChannelInvitesCreateRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{139}
}

func (x *ChannelInvitesCreateRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChannelInvitesCreateRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ChannelInvitesCreateRequest) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

type ChannelInvitesCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChannelInvitesCreateResponse) Reset() {
	*x = ChannelInvitesCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInvitesCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInvitesCreateResponse) ProtoMessage() {}

func (x *ChannelInvitesCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInvitesCreateResponse.ProtoReflect.Descriptor instead.
func (*ChannelInvitesCreateResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{140}
}

func (x *ChannelInvitesCreateResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChannelUninviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel   string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Sender    string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient string `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (x *ChannelUninviteRequest) Reset() {
	*x = ChannelUninviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUninviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUninviteRequest) ProtoMessage() {}

func (x *ChannelUninviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUninviteRequest.ProtoReflect.Descriptor instead.
func (*ChannelUninviteRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{141}
}

func (x *ChannelUninviteRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChannelUninviteRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ChannelUninviteRequest) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

type ChannelUninviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChannelUninviteResponse) Reset() {
	*x = ChannelUninviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUninviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUninviteResponse) ProtoMessage() {}

func (x *ChannelUninviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUninviteResponse.ProtoReflect.Descriptor instead.
func (*ChannelUninviteResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{142}
}

func (x *ChannelUninviteResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChannelInvite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel   *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Recipient *Key     `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Sender    *Key     `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *ChannelInvite) Reset() {
	*x = ChannelInvite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInvite) ProtoMessage() {}

func (x *ChannelInvite) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInvite.ProtoReflect.Descriptor instead.
func (*ChannelInvite) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{143}
}

func (x *ChannelInvite) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *ChannelInvite) GetRecipient() *Key {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *ChannelInvite) GetSender() *Key {
	if x != nil {
		return x.Sender
	}
	return nil
}

type ChannelInvitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	User    string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChannelInvitesRequest) Reset() {
	*x = ChannelInvitesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInvitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInvitesRequest) ProtoMessage() {}

func (x *ChannelInvitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInvitesRequest.ProtoReflect.Descriptor instead.
func (*ChannelInvitesRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{144}
}

func (x *ChannelInvitesRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChannelInvitesRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ChannelInvitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invites []*ChannelInvite `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
}

func (x *ChannelInvitesResponse) Reset() {
	*x = ChannelInvitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInvitesResponse) ProtoMessage() {}

func (x *ChannelInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInvitesResponse.ProtoReflect.Descriptor instead.
func (*ChannelInvitesResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{145}
}

func (x *ChannelInvitesResponse) GetInvites() []*ChannelInvite {
	if x != nil {
		return x.Invites
	}
	return nil
}

type ChannelUserInvitesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChannelUserInvitesRequest) Reset() {
	*x = ChannelUserInvitesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUserInvitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUserInvitesRequest) ProtoMessage() {}

func (x *ChannelUserInvitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUserInvitesRequest.ProtoReflect.Descriptor instead.
func (*ChannelUserInvitesRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{146}
}

func (x *ChannelUserInvitesRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ChannelUserInvitesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invites []*ChannelInvite `protobuf:"bytes,1,rep,name=invites,proto3" json:"invites,omitempty"`
}

func (x *ChannelUserInvitesResponse) Reset() {
	*x = ChannelUserInvitesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUserInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUserInvitesResponse) ProtoMessage() {}

func (x *ChannelUserInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUserInvitesResponse.ProtoReflect.Descriptor instead.
func (*ChannelUserInvitesResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{147}
}

func (x *ChannelUserInvitesResponse) GetInvites() []*ChannelInvite {
	if x != nil {
		return x.Invites
	}
	return nil
}

type ChannelJoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	User    string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChannelJoinRequest) Reset() {
	*x = ChannelJoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelJoinRequest) ProtoMessage() {}

func (x *ChannelJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelJoinRequest.ProtoReflect.Descriptor instead.
func (*ChannelJoinRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{148}
}

func (x *ChannelJoinRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChannelJoinRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ChannelJoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChannelJoinResponse) Reset() {
	*x = ChannelJoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelJoinResponse) ProtoMessage() {}

func (x *ChannelJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelJoinResponse.ProtoReflect.Descriptor instead.
func (*ChannelJoinResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{149}
}

type ChannelLeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	User    string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ChannelLeaveRequest) Reset() {
	*x = ChannelLeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelLeaveRequest) ProtoMessage() {}

func (x *ChannelLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelLeaveRequest.ProtoReflect.Descriptor instead.
func (*ChannelLeaveRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{150}
}

func (x *ChannelLeaveRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChannelLeaveRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ChannelLeaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChannelLeaveResponse) Reset() {
	*x = ChannelLeaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelLeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelLeaveResponse) ProtoMessage() {}

func (x *ChannelLeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelLeaveResponse.ProtoReflect.Descriptor instead.
func (*ChannelLeaveResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{151}
}

func (x *ChannelLeaveResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type AdminSignURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	URL    string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AdminSignURLRequest) Reset() {
	*x = AdminSignURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminSignURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminSignURLRequest) ProtoMessage() {}

func (x *AdminSignURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminSignURLRequest.ProtoReflect.Descriptor instead.
func (*AdminSignURLRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{152}
}

func (x *AdminSignURLRequest) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *AdminSignURLRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *AdminSignURLRequest) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type AdminSignURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth string `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	URL  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	CURL string `protobuf:"bytes,3,opt,name=curl,proto3" json:"curl,omitempty"`
}

func (x *AdminSignURLResponse) Reset() {
	*x = AdminSignURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminSignURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminSignURLResponse) ProtoMessage() {}

func (x *AdminSignURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminSignURLResponse.ProtoReflect.Descriptor instead.
func (*AdminSignURLResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{153}
}

func (x *AdminSignURLResponse) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *AdminSignURLResponse) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *AdminSignURLResponse) GetCURL() string {
	if x != nil {
		return x.CURL
	}
	return ""
}

type AdminCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Check  string `protobuf:"bytes,2,opt,name=check,proto3" json:"check,omitempty"`
}

func (x *AdminCheckRequest) Reset() {
	*x = AdminCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCheckRequest) ProtoMessage() {}

func (x *AdminCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCheckRequest.ProtoReflect.Descriptor instead.
func (*AdminCheckRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{154}
}

func (x *AdminCheckRequest) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *AdminCheckRequest) GetCheck() string {
	if x != nil {
		return x.Check
	}
	return ""
}

type AdminCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AdminCheckResponse) Reset() {
	*x = AdminCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCheckResponse) ProtoMessage() {}

func (x *AdminCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCheckResponse.ProtoReflect.Descriptor instead.
func (*AdminCheckResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{155}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App     *Config_App     `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Encrypt *Config_Encrypt `protobuf:"bytes,10,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	Sign    *Config_Sign    `protobuf:"bytes,11,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{156}
}

func (x *Config) GetApp() *Config_App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *Config) GetEncrypt() *Config_Encrypt {
	if x != nil {
		return x.Encrypt
	}
	return nil
}

func (x *Config) GetSign() *Config_Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

type ConfigGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ConfigGetRequest) Reset() {
	*x = ConfigGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetRequest) ProtoMessage() {}

func (x *ConfigGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetRequest.ProtoReflect.Descriptor instead.
func (*ConfigGetRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{157}
}

func (x *ConfigGetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ConfigGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ConfigGetResponse) Reset() {
	*x = ConfigGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetResponse) ProtoMessage() {}

func (x *ConfigGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetResponse.ProtoReflect.Descriptor instead.
func (*ConfigGetResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{158}
}

func (x *ConfigGetResponse) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type ConfigSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config *Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ConfigSetRequest) Reset() {
	*x = ConfigSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSetRequest) ProtoMessage() {}

func (x *ConfigSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSetRequest.ProtoReflect.Descriptor instead.
func (*ConfigSetRequest) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{159}
}

func (x *ConfigSetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigSetRequest) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type ConfigSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigSetResponse) Reset() {
	*x = ConfigSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSetResponse) ProtoMessage() {}

func (x *ConfigSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSetResponse.ProtoReflect.Descriptor instead.
func (*ConfigSetResponse) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{160}
}

type WormholeInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient string `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Invite    string `protobuf:"bytes,3,opt,name=invite,proto3" json:"invite,omitempty"`
	ID        string `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	Text      string `protobuf:"bytes,11,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *WormholeInput) Reset() {
	*x = WormholeInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WormholeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WormholeInput) ProtoMessage() {}

func (x *WormholeInput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WormholeInput.ProtoReflect.Descriptor instead.
func (*WormholeInput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{161}
}

func (x *WormholeInput) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *WormholeInput) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *WormholeInput) GetInvite() string {
	if x != nil {
		return x.Invite
	}
	return ""
}

func (x *WormholeInput) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *WormholeInput) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type WormholeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender    *Key                  `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient *Key                  `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Status    WormholeMessageStatus `protobuf:"varint,5,opt,name=status,proto3,enum=keys.WormholeMessageStatus" json:"status,omitempty"`
	Text      string                `protobuf:"bytes,10,opt,name=text,proto3" json:"text,omitempty"`
	CreatedAt int64                 `protobuf:"varint,21,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *WormholeMessage) Reset() {
	*x = WormholeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WormholeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WormholeMessage) ProtoMessage() {}

func (x *WormholeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WormholeMessage.ProtoReflect.Descriptor instead.
func (*WormholeMessage) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{162}
}

func (x *WormholeMessage) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *WormholeMessage) GetSender() *Key {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *WormholeMessage) GetRecipient() *Key {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *WormholeMessage) GetStatus() WormholeMessageStatus {
	if x != nil {
		return x.Status
	}
	return WormholeMessageSent
}

func (x *WormholeMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *WormholeMessage) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type WormholeOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *WormholeMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  WormholeStatus   `protobuf:"varint,2,opt,name=status,proto3,enum=keys.WormholeStatus" json:"status,omitempty"`
}

func (x *WormholeOutput) Reset() {
	*x = WormholeOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WormholeOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WormholeOutput) ProtoMessage() {}

func (x *WormholeOutput) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WormholeOutput.ProtoReflect.Descriptor instead.
func (*WormholeOutput) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{163}
}

func (x *WormholeOutput) GetMessage() *WormholeMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *WormholeOutput) GetStatus() WormholeStatus {
	if x != nil {
		return x.Status
	}
	return WormholeDefault
}

type Config_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location     string   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	History      []string `protobuf:"bytes,2,rep,name=history,proto3" json:"history,omitempty"`
	NavMinimized bool     `protobuf:"varint,100,opt,name=navMinimized,proto3" json:"navMinimized,omitempty"`
}

func (x *Config_App) Reset() {
	*x = Config_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_App) ProtoMessage() {}

func (x *Config_App) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_App.ProtoReflect.Descriptor instead.
func (*Config_App) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{156, 0}
}

func (x *Config_App) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Config_App) GetHistory() []string {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *Config_App) GetNavMinimized() bool {
	if x != nil {
		return x.NavMinimized
	}
	return false
}

type Config_Encrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipients        []string `protobuf:"bytes,1,rep,name=recipients,proto3" json:"recipients,omitempty"`
	Sender            string   `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	NoSenderRecipient bool     `protobuf:"varint,3,opt,name=noSenderRecipient,proto3" json:"noSenderRecipient,omitempty"`
	NoSign            bool     `protobuf:"varint,4,opt,name=noSign,proto3" json:"noSign,omitempty"`
}

func (x *Config_Encrypt) Reset() {
	*x = Config_Encrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Encrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Encrypt) ProtoMessage() {}

func (x *Config_Encrypt) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Encrypt.ProtoReflect.Descriptor instead.
func (*Config_Encrypt) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{156, 1}
}

func (x *Config_Encrypt) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *Config_Encrypt) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Config_Encrypt) GetNoSenderRecipient() bool {
	if x != nil {
		return x.NoSenderRecipient
	}
	return false
}

func (x *Config_Encrypt) GetNoSign() bool {
	if x != nil {
		return x.NoSign
	}
	return false
}

type Config_Sign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *Config_Sign) Reset() {
	*x = Config_Sign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keys_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Sign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Sign) ProtoMessage() {}

func (x *Config_Sign) ProtoReflect() protoreflect.Message {
	mi := &file_keys_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Sign.ProtoReflect.Descriptor instead.
func (*Config_Sign) Descriptor() ([]byte, []int) {
	return file_keys_proto_rawDescGZIP(), []int{156, 2}
}

func (x *Config_Sign) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

var File_keys_proto protoreflect.FileDescriptor

var file_keys_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x1a, 0x0e, 0x70, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x61, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x22, 0x3f, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52,
	0x03, 0x6b, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x6b, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x69, 0x6c,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52,
	0x03, 0x6b, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x23, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x22, 0x3d, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22,
	0x3b, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x21, 0x0a, 0x0b,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x45, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x22, 0x47, 0x0a, 0x10, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x21, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6f, 0x75, 0x74, 0x22, 0x3b, 0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69,
	0x67, 0x22, 0x3b, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0xbe,
	0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x70, 0x72, 0x65, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x2e, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x22,
	0x60, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x41, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x73, 0x65, 0x71, 0x22, 0x42, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03,
	0x6b, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x48, 0x0a, 0x17, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5,
	0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x22, 0x48, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x8f, 0x01, 0x0a,
	0x09, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x6d, 0x6f,
	0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x72, 0x6d, 0x6f, 0x72,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x3d,
	0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca,
	0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x22, 0x97, 0x01,
	0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x6f,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x6e, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x39, 0x0a, 0x0f, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x51, 0x0a, 0x11, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x23, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6f, 0x0a, 0x0f, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x10,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f,
	0x75, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x22, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x15,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x79, 0x6e,
	0x63, 0x12, 0x21, 0x0a, 0x05, 0x66, 0x69, 0x64, 0x6f, 0x32, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x0b, 0xca, 0xb5, 0x03, 0x07, 0x0a, 0x05, 0x46, 0x49, 0x44, 0x4f, 0x32, 0x52, 0x05, 0x66,
	0x69, 0x64, 0x6f, 0x32, 0x22, 0x66, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x13, 0x0a, 0x11,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2a, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x13, 0x0a,
	0x11, 0x41, 0x75, 0x74, 0x68, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x67, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x12, 0x41,
	0x75, 0x74, 0x68, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x86, 0x01, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x22, 0x4a, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x44, 0x65, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04,
	0x0a, 0x02, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68,
	0x44, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x19, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f,
	0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6e, 0x65, 0x77, 0x22, 0x1c, 0x0a, 0x1a, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x24, 0x0a, 0x06, 0x61, 0x61, 0x67, 0x75, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xca, 0xb5, 0x03, 0x08, 0x0a, 0x06, 0x41, 0x41, 0x47, 0x55, 0x49, 0x44, 0x52, 0x06,
	0x61, 0x61, 0x67, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x50, 0x69, 0x6e, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6e, 0x6f, 0x50, 0x69, 0x6e, 0x22, 0x17, 0x0a, 0x15,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x4c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x10, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52,
	0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x33, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x28, 0x0a, 0x12, 0x4b, 0x65, 0x79, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x32, 0x0a, 0x13, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44,
	0x52, 0x03, 0x6b, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03,
	0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x5c, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03,
	0x6b, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x40, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03,
	0x6b, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x22, 0x60, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03,
	0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x3e, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x30, 0x0a, 0x11, 0x4b, 0x65, 0x79, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69,
	0x64, 0x22, 0x2f, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b,
	0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03,
	0x04, 0x0a, 0x02, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x61, 0x76, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x61, 0x76, 0x65,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x69, 0x67,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x69, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4e, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x2a, 0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x92, 0x01, 0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x39, 0x0a,
	0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b,
	0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x83, 0x02, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x55, 0x52, 0x4c,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x29, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x36, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x39, 0x0a, 0x11, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x3a, 0x0a, 0x12, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x22, 0x2f, 0x0a, 0x13, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x0a, 0x0e, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x6f,
	0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x0f,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x07,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x91, 0x01, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x08,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x50, 0x61,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x50,
	0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x63,
	0x61, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x63, 0x61, 0x73, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x13, 0x52, 0x61, 0x6e, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x32, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x1f, 0x0a, 0x0b, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x2e, 0x0a, 0x0c,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04,
	0x6b, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xb5, 0x03, 0x06,
	0x0a, 0x04, 0x4b, 0x49, 0x44, 0x73, 0x52, 0x04, 0x6b, 0x69, 0x64, 0x73, 0x22, 0x41, 0x0a, 0x0b,
	0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22,
	0x4b, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5,
	0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04,
	0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xb5, 0x03, 0x06,
	0x0a, 0x04, 0x55, 0x52, 0x4c, 0x73, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0x20, 0x0a, 0x0a,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x46,
	0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x02,
	0x64, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02,
	0x44, 0x42, 0x52, 0x02, 0x64, 0x62, 0x22, 0x49, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x70, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x44, 0x0a, 0x10, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x18, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03,
	0x04, 0x0a, 0x02, 0x44, 0x42, 0x52, 0x02, 0x64, 0x62, 0x22, 0x41, 0x0a, 0x11, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x45, 0x0a, 0x15,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x02, 0x64, 0x62, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02, 0x44, 0x42, 0x52,
	0x02, 0x64, 0x62, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x02,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x73, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05,
	0x0a, 0x03, 0x55, 0x52, 0x4c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x22, 0x40, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x36, 0x0a,
	0x12, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x2f, 0x0a, 0x0e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x12, 0x0a,
	0x10, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x13, 0x0a, 0x11, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x55,
	0x6e, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13,
	0x56, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x6e, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x11, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x13, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x4b, 0x49, 0x44, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x41, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x15, 0x0a, 0x13, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x5d, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x41,
	0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x76, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x40, 0x0a, 0x15, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x0f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x3d, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x76, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x85, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70,
	0x70, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x25, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3d,
	0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x3e, 0x0a,
	0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x40, 0x0a,
	0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22,
	0x2a, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x43, 0x0a, 0x13, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x3f, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x22, 0x6f, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x47, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x16, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x6e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x55, 0x6e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b,
	0x65, 0x79, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x22, 0x45, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x47, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73,
	0x22, 0x2f, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x4b, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x22, 0x42,
	0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x13, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3f,
	0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x62, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5, 0x03, 0x05, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x67, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x6e,
	0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x1b, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xb5,
	0x03, 0x05, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x04,
	0x63, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xb5, 0x03, 0x06,
	0x0a, 0x04, 0x43, 0x55, 0x52, 0x4c, 0x52, 0x04, 0x63, 0x75, 0x72, 0x6c, 0x22, 0x41, 0x0a, 0x11,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x22,
	0x14, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8e, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x22, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x52,
	0x03, 0x61, 0x70, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x07, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x1a, 0x5f, 0x0a, 0x03, 0x41,
	0x70, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x61, 0x76, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x6e, 0x61, 0x76, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x1a, 0x87, 0x01, 0x0a,
	0x07, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x6f, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6e, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x1a, 0x1e, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4c, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x0a,
	0x0d, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04, 0x0a, 0x02,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x0f, 0x57,
	0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xb5, 0x03, 0x04,
	0x0a, 0x02, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x4b, 0x65, 0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6d,
	0x68, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6f, 0x0a, 0x0e, 0x57,
	0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xa9, 0x01, 0x0a,
	0x0b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x0f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x10,
	0x00, 0x1a, 0x14, 0xca, 0xb5, 0x03, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x2b, 0x0a, 0x10, 0x53, 0x41, 0x4c, 0x54, 0x50,
	0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x10, 0x01, 0x1a, 0x15, 0xca,
	0xb5, 0x03, 0x11, 0x0a, 0x0f, 0x53, 0x61, 0x6c, 0x74, 0x70, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x12, 0x2f, 0x0a, 0x12, 0x53, 0x41, 0x4c, 0x54, 0x50, 0x41, 0x43, 0x4b,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x10, 0x03, 0x1a, 0x17, 0xca, 0xb5,
	0x03, 0x13, 0x0a, 0x11, 0x53, 0x61, 0x6c, 0x74, 0x70, 0x61, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x1a, 0x11, 0xca, 0xb5, 0x03, 0x0d, 0x0a, 0x0b, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x2a, 0xbb, 0x01, 0x0a, 0x0a, 0x41, 0x75, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0c, 0x41, 0x55, 0x54, 0x48, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x1a, 0x11, 0xca, 0xb5, 0x03, 0x0d, 0x0a,
	0x0b, 0x41, 0x75, 0x74, 0x68, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x2c, 0x0a, 0x11,
	0x41, 0x55, 0x54, 0x48, 0x5f, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x45,
	0x44, 0x10, 0x01, 0x1a, 0x15, 0xca, 0xb5, 0x03, 0x11, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x41, 0x55,
	0x54, 0x48, 0x5f, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x12, 0xca,
	0xb5, 0x03, 0x0e, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x12, 0x21, 0x0a, 0x0b, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x03, 0x1a, 0x10, 0xca, 0xb5, 0x03, 0x0c, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x1a, 0x10, 0xca, 0xb5, 0x03, 0x0c, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xc5, 0x01, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x10, 0x00, 0x1a, 0x11, 0xca, 0xb5, 0x03, 0x0d, 0x0a, 0x0b, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0d, 0x50, 0x41, 0x53, 0x53,
	0x57, 0x4f, 0x52, 0x44, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x10, 0x0a, 0x1a, 0x12, 0xca, 0xb5, 0x03,
	0x0e, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x26, 0x0a, 0x0e, 0x50, 0x41, 0x50, 0x45, 0x52, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x10, 0x0b, 0x1a, 0x12, 0xca, 0xb5, 0x03, 0x0e, 0x0a, 0x0c, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x16, 0x46, 0x49, 0x44, 0x4f, 0x32,
	0x5f, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x10, 0x14, 0x1a, 0x19, 0xca, 0xb5, 0x03, 0x15, 0x0a, 0x13, 0x46, 0x49, 0x44, 0x4f, 0x32,
	0x48, 0x4d, 0x41, 0x43, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x0e,
	0xca, 0xb5, 0x03, 0x0a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x2a, 0xa2,
	0x01, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a,
	0x13, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x1a, 0x13, 0xca, 0xb5, 0x03, 0x0f, 0x0a, 0x0d, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x14, 0x53,
	0x41, 0x4c, 0x54, 0x50, 0x41, 0x43, 0x4b, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x01, 0x1a, 0x14, 0xca, 0xb5, 0x03, 0x10, 0x0a, 0x0e, 0x53, 0x61, 0x6c,
	0x74, 0x70, 0x61, 0x63, 0x6b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0f, 0x53,
	0x53, 0x48, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x02,
	0x1a, 0x0f, 0xca, 0xb5, 0x03, 0x0b, 0x0a, 0x09, 0x53, 0x53, 0x48, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x1a, 0x10, 0xca, 0xb5, 0x03, 0x0c, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x2a, 0x56, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x1a, 0x0d, 0xca,
	0xb5, 0x03, 0x09, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x41, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x04,
	0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x1a, 0x0e, 0xca, 0xb5, 0x03, 0x0a, 0x0a, 0x08, 0x53, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x1a, 0x13, 0xca, 0xb5, 0x03, 0x0f, 0x0a, 0x0d, 0x53, 0x6f,
	0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0xe6, 0x01, 0x0a, 0x0a,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x13, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x00, 0x1a, 0x13, 0xca, 0xb5, 0x03, 0x0f, 0x0a, 0x0d, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x0f, 0x50, 0x41, 0x53, 0x53,
	0x57, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x10, 0x0a, 0x1a, 0x14, 0xca,
	0xb5, 0x03, 0x10, 0x0a, 0x0e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x5f, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x10, 0x0b, 0x1a, 0x13, 0xca, 0xb5, 0x03, 0x0f, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0b,
	0x43, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x10, 0x0c, 0x1a, 0x10, 0xca,
	0xb5, 0x03, 0x0c, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x21, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x10, 0x0d,
	0x1a, 0x10, 0xca, 0xb5, 0x03, 0x0c, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x1a, 0x10, 0xca, 0xb5, 0x03, 0x0c, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x2a, 0xe6, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x03, 0x48, 0x45, 0x58, 0x10, 0x00, 0x1a, 0x09, 0xca, 0xb5, 0x03, 0x05,
	0x0a, 0x03, 0x48, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x06, 0x42, 0x41, 0x53, 0x45, 0x36, 0x32, 0x10,
	0x01, 0x1a, 0x0c, 0xca, 0xb5, 0x03, 0x08, 0x0a, 0x06, 0x42, 0x61, 0x73, 0x65, 0x36, 0x32, 0x12,
	0x18, 0x0a, 0x06, 0x42, 0x41, 0x53, 0x45, 0x35, 0x38, 0x10, 0x02, 0x1a, 0x0c, 0xca, 0xb5, 0x03,
	0x08, 0x0a, 0x06, 0x42, 0x61, 0x73, 0x65, 0x35, 0x38, 0x12, 0x18, 0x0a, 0x06, 0x42, 0x41, 0x53,
	0x45, 0x33, 0x32, 0x10, 0x03, 0x1a, 0x0c, 0xca, 0xb5, 0x03, 0x08, 0x0a, 0x06, 0x42, 0x61, 0x73,
	0x65, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x06, 0x42, 0x41, 0x53, 0x45, 0x31, 0x36, 0x10, 0x04, 0x1a,
	0x0c, 0xca, 0xb5, 0x03, 0x08, 0x0a, 0x06, 0x42, 0x61, 0x73, 0x65, 0x31, 0x36, 0x12, 0x18, 0x0a,
	0x06, 0x42, 0x41, 0x53, 0x45, 0x36, 0x34, 0x10, 0x05, 0x1a, 0x0c, 0xca, 0xb5, 0x03, 0x08, 0x0a,
	0x06, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x1c, 0x0a, 0x08, 0x53, 0x41, 0x4c, 0x54, 0x50,
	0x41, 0x43, 0x4b, 0x10, 0x06, 0x1a, 0x0e, 0xca, 0xb5, 0x03, 0x0a, 0x0a, 0x08, 0x53, 0x61, 0x6c,
	0x74, 0x70, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x05, 0x42, 0x49, 0x50, 0x33, 0x39, 0x10, 0x07,
	0x1a, 0x0b, 0xca, 0xb5, 0x03, 0x07, 0x0a, 0x05, 0x42, 0x49, 0x50, 0x33, 0x39, 0x1a, 0x0e, 0xca,
	0xb5, 0x03, 0x0a, 0x0a, 0x08, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2a, 0xff, 0x02,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x0c,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x1a, 0x17,
	0xca, 0xb5, 0x03, 0x13, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x1f, 0x0a, 0x07, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4f, 0x4b, 0x10, 0x01, 0x1a, 0x12, 0xca, 0xb5, 0x03, 0x0e, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x4b, 0x12, 0x3d, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x14, 0x1a, 0x20, 0xca, 0xb5, 0x03, 0x1c, 0x0a, 0x1a, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x1e, 0x1a, 0x1f, 0xca, 0xb5, 0x03, 0x1b, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x38, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x1f, 0x1a, 0x1e,
	0xca, 0xb5, 0x03, 0x1a, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x32,
	0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x55, 0x52, 0x45, 0x10, 0x28, 0x1a, 0x1b, 0xca, 0xb5, 0x03, 0x17, 0x0a, 0x15, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x12, 0x29, 0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55,
	0x52, 0x45, 0x10, 0x32, 0x1a, 0x17, 0xca, 0xb5, 0x03, 0x13, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x1a, 0x10, 0xca,
	0xb5, 0x03, 0x0c, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a,
	0x74, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0c, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x54,
	0x10, 0x00, 0x1a, 0x11, 0xca, 0xb5, 0x03, 0x0d, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x1a, 0x14, 0xca, 0xb5, 0x03, 0x10,
	0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x1a, 0x13, 0xca, 0xb5, 0x03, 0x0f, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xda, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x11, 0x52, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x16, 0xca, 0xb5, 0x03, 0x12,
	0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x52, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x48, 0x45, 0x4c, 0x4c,
	0x4f, 0x10, 0x01, 0x1a, 0x10, 0xca, 0xb5, 0x03, 0x0c, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x34, 0x0a, 0x15, 0x52, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x0a,
	0x1a, 0x19, 0xca, 0xb5, 0x03, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x52,
	0x45, 0x4c, 0x41, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x10, 0x14, 0x1a, 0x19, 0xca, 0xb5, 0x03, 0x15, 0x0a, 0x13, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x0f, 0xca, 0xb5, 0x03, 0x0b, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x2a, 0xf0, 0x02, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x10, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c,
	0x45, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x1a, 0x15, 0xca, 0xb5, 0x03,
	0x11, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x11, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x0a, 0x1a, 0x16, 0xca, 0xb5, 0x03, 0x12, 0x0a,
	0x10, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x2d, 0x0a, 0x11, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c, 0x45, 0x5f, 0x4f, 0x46,
	0x46, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x14, 0x1a, 0x16, 0xca, 0xb5, 0x03, 0x12, 0x0a, 0x10,
	0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x2f, 0x0a, 0x12, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x4e, 0x53,
	0x57, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x15, 0x1a, 0x17, 0xca, 0xb5, 0x03, 0x13, 0x0a, 0x11,
	0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x2f, 0x0a, 0x12, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c, 0x45, 0x5f, 0x48, 0x41,
	0x4e, 0x44, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x10, 0x28, 0x1a, 0x17, 0xca, 0xb5, 0x03, 0x13, 0x0a,
	0x11, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x12, 0x2f, 0x0a, 0x12, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x64, 0x1a, 0x17, 0xca, 0xb5, 0x03, 0x13,
	0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x0f, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c, 0x45, 0x5f,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0xc8, 0x01, 0x1a, 0x14, 0xca, 0xb5, 0x03, 0x10, 0x0a,
	0x0e, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x1a,
	0x14, 0xca, 0xb5, 0x03, 0x10, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xda, 0x01, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x34, 0x0a, 0x15, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x1a, 0x19, 0xca, 0xb5, 0x03, 0x15,
	0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c,
	0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x1a, 0x1c, 0xca, 0xb5, 0x03, 0x18, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6d, 0x68,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x32, 0x0a, 0x14, 0x57, 0x4f, 0x52, 0x4d, 0x48, 0x4f, 0x4c, 0x45, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x1a, 0x18, 0xca, 0xb5, 0x03,
	0x14, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x63, 0x6b, 0x1a, 0x1b, 0xca, 0xb5, 0x03, 0x17, 0x0a, 0x15, 0x57, 0x6f, 0x72,
	0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x32, 0xf8, 0x27, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x4b,
	0x65, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x2f, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x2c, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x16, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2f, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x13, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x46, 0x69,
	0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x35,
	0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x10, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x35, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12,
	0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x46,
	0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x3b, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x12, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4d, 0x0a, 0x0e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x1b,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x1d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x12, 0x53, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x19, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x12, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x12, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x44, 0x0a, 0x0b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x12, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x12, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x44, 0x0a, 0x0b, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x15, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x53, 0x69, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x15,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x38, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x14, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x06, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x13, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x35, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x53, 0x61, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x19, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x14,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a,
	0x04, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f,
	0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x14, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6d, 0x68, 0x6f, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x09,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09,
	0x41, 0x75, 0x74, 0x68, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x17, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x15, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f,
	0x0a, 0x04, 0x52, 0x61, 0x6e, 0x64, 0x12, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x52, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0c, 0x52, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x19, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x44, 0x65, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x44, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x44, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x09, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x16, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x09, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x16, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x0b, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x6e, 0x73, 0x79, 0x6e, 0x63, 0x12,
	0x18, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x6e, 0x73, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x6e, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b,
	0x56, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x18, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x53, 0x69, 0x67, 0x6e, 0x55, 0x52, 0x4c, 0x12, 0x19, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x17,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12,
	0x15, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x55, 0x6e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x6e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x6e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f, 0x69,
	0x6e, 0x12, 0x18, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x19, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x12, 0x1b, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x05, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x12, 0x12, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0x0b, 0x5a,
	0x09, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_keys_proto_rawDescOnce sync.Once
	file_keys_proto_rawDescData = file_keys_proto_rawDesc
)

func file_keys_proto_rawDescGZIP() []byte {
	file_keys_proto_rawDescOnce.Do(func() {
		file_keys_proto_rawDescData = protoimpl.X.CompressGZIP(file_keys_proto_rawDescData)
	})
	return file_keys_proto_rawDescData
}

var file_keys_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_keys_proto_msgTypes = make([]protoimpl.MessageInfo, 167)
var file_keys_proto_goTypes = []interface{}{
	(EncryptMode)(0),                     // 0: keys.EncryptMode
	(AuthStatus)(0),                      // 1: keys.AuthStatus
	(AuthType)(0),                        // 2: keys.AuthType
	(ExportType)(0),                      // 3: keys.ExportType
	(SortDirection)(0),                   // 4: keys.SortDirection
	(SecretType)(0),                      // 5: keys.SecretType
	(Encoding)(0),                        // 6: keys.Encoding
	(UserStatus)(0),                      // 7: keys.UserStatus
	(MessageStatus)(0),                   // 8: keys.MessageStatus
	(RelayType)(0),                       // 9: keys.RelayType
	(WormholeStatus)(0),                  // 10: keys.WormholeStatus
	(WormholeMessageStatus)(0),           // 11: keys.WormholeMessageStatus
	(*SignRequest)(nil),                  // 12: keys.SignRequest
	(*SignResponse)(nil),                 // 13: keys.SignResponse
	(*SignFileInput)(nil),                // 14: keys.SignFileInput
	(*SignFileOutput)(nil),               // 15: keys.SignFileOutput
	(*VerifyRequest)(nil),                // 16: keys.VerifyRequest
	(*VerifyResponse)(nil),               // 17: keys.VerifyResponse
	(*VerifyDetachedRequest)(nil),        // 18: keys.VerifyDetachedRequest
	(*VerifyDetachedResponse)(nil),       // 19: keys.VerifyDetachedResponse
	(*VerifyInput)(nil),                  // 20: keys.VerifyInput
	(*VerifyOutput)(nil),                 // 21: keys.VerifyOutput
	(*VerifyFileInput)(nil),              // 22: keys.VerifyFileInput
	(*VerifyFileOutput)(nil),             // 23: keys.VerifyFileOutput
	(*VerifyDetachedFileInput)(nil),      // 24: keys.VerifyDetachedFileInput
	(*VerifyDetachedInput)(nil),          // 25: keys.VerifyDetachedInput
	(*Statement)(nil),                    // 26: keys.Statement
	(*SigchainRequest)(nil),              // 27: keys.SigchainRequest
	(*SigchainResponse)(nil),             // 28: keys.SigchainResponse
	(*StatementRequest)(nil),             // 29: keys.StatementRequest
	(*StatementResponse)(nil),            // 30: keys.StatementResponse
	(*StatementCreateRequest)(nil),       // 31: keys.StatementCreateRequest
	(*StatementCreateResponse)(nil),      // 32: keys.StatementCreateResponse
	(*StatementRevokeRequest)(nil),       // 33: keys.StatementRevokeRequest
	(*StatementRevokeResponse)(nil),      // 34: keys.StatementRevokeResponse
	(*SignInput)(nil),                    // 35: keys.SignInput
	(*SignOutput)(nil),                   // 36: keys.SignOutput
	(*EncryptOptions)(nil),               // 37: keys.EncryptOptions
	(*EncryptRequest)(nil),               // 38: keys.EncryptRequest
	(*EncryptResponse)(nil),              // 39: keys.EncryptResponse
	(*EncryptFileInput)(nil),             // 40: keys.EncryptFileInput
	(*EncryptFileOutput)(nil),            // 41: keys.EncryptFileOutput
	(*EncryptInput)(nil),                 // 42: keys.EncryptInput
	(*EncryptOutput)(nil),                // 43: keys.EncryptOutput
	(*DecryptRequest)(nil),               // 44: keys.DecryptRequest
	(*DecryptResponse)(nil),              // 45: keys.DecryptResponse
	(*DecryptFileInput)(nil),             // 46: keys.DecryptFileInput
	(*DecryptFileOutput)(nil),            // 47: keys.DecryptFileOutput
	(*DecryptInput)(nil),                 // 48: keys.DecryptInput
	(*DecryptOutput)(nil),                // 49: keys.DecryptOutput
	(*RuntimeStatusRequest)(nil),         // 50: keys.RuntimeStatusRequest
	(*RuntimeStatusResponse)(nil),        // 51: keys.RuntimeStatusResponse
	(*AuthSetupRequest)(nil),             // 52: keys.AuthSetupRequest
	(*AuthSetupResponse)(nil),            // 53: keys.AuthSetupResponse
	(*AuthVaultRequest)(nil),             // 54: keys.AuthVaultRequest
	(*AuthVaultResponse)(nil),            // 55: keys.AuthVaultResponse
	(*AuthUnlockRequest)(nil),            // 56: keys.AuthUnlockRequest
	(*AuthUnlockResponse)(nil),           // 57: keys.AuthUnlockResponse
	(*AuthProvisionRequest)(nil),         // 58: keys.AuthProvisionRequest
	(*AuthProvisionResponse)(nil),        // 59: keys.AuthProvisionResponse
	(*AuthDeprovisionRequest)(nil),       // 60: keys.AuthDeprovisionRequest
	(*AuthDeprovisionResponse)(nil),      // 61: keys.AuthDeprovisionResponse
	(*AuthPasswordChangeRequest)(nil),    // 62: keys.AuthPasswordChangeRequest
	(*AuthPasswordChangeResponse)(nil),   // 63: keys.AuthPasswordChangeResponse
	(*AuthProvision)(nil),                // 64: keys.AuthProvision
	(*AuthProvisionsRequest)(nil),        // 65: keys.AuthProvisionsRequest
	(*AuthProvisionsResponse)(nil),       // 66: keys.AuthProvisionsResponse
	(*AuthLockRequest)(nil),              // 67: keys.AuthLockRequest
	(*AuthLockResponse)(nil),             // 68: keys.AuthLockResponse
	(*AuthResetRequest)(nil),             // 69: keys.AuthResetRequest
	(*AuthResetResponse)(nil),            // 70: keys.AuthResetResponse
	(*AuthRecoverRequest)(nil),           // 71: keys.AuthRecoverRequest
	(*AuthRecoverResponse)(nil),          // 72: keys.AuthRecoverResponse
	(*KeyGenerateRequest)(nil),           // 73: keys.KeyGenerateRequest
	(*KeyGenerateResponse)(nil),          // 74: keys.KeyGenerateResponse
	(*UserServiceRequest)(nil),           // 75: keys.UserServiceRequest
	(*UserServiceResponse)(nil),          // 76: keys.UserServiceResponse
	(*UserSignRequest)(nil),              // 77: keys.UserSignRequest
	(*UserSignResponse)(nil),             // 78: keys.UserSignResponse
	(*UserAddRequest)(nil),               // 79: keys.UserAddRequest
	(*UserAddResponse)(nil),              // 80: keys.UserAddResponse
	(*KeyExportRequest)(nil),             // 81: keys.KeyExportRequest
	(*KeyExportResponse)(nil),            // 82: keys.KeyExportResponse
	(*KeyImportRequest)(nil),             // 83: keys.KeyImportRequest
	(*KeyImportResponse)(nil),            // 84: keys.KeyImportResponse
	(*KeyRemoveRequest)(nil),             // 85: keys.KeyRemoveRequest
	(*KeyRemoveResponse)(nil),            // 86: keys.KeyRemoveResponse
	(*Key)(nil),                          // 87: keys.Key
	(*KeyRequest)(nil),                   // 88: keys.KeyRequest
	(*KeyResponse)(nil),                  // 89: keys.KeyResponse
	(*KeysRequest)(nil),                  // 90: keys.KeysRequest
	(*KeysResponse)(nil),                 // 91: keys.KeysResponse
	(*Secret)(nil),                       // 92: keys.Secret
	(*SecretRequest)(nil),                // 93: keys.SecretRequest
	(*SecretResponse)(nil),               // 94: keys.SecretResponse
	(*SecretSaveRequest)(nil),            // 95: keys.SecretSaveRequest
	(*SecretSaveResponse)(nil),           // 96: keys.SecretSaveResponse
	(*SecretRemoveRequest)(nil),          // 97: keys.SecretRemoveRequest
	(*SecretRemoveResponse)(nil),         // 98: keys.SecretRemoveResponse
	(*SecretsRequest)(nil),               // 99: keys.SecretsRequest
	(*SecretsResponse)(nil),              // 100: keys.SecretsResponse
	(*RandRequest)(nil),                  // 101: keys.RandRequest
	(*RandResponse)(nil),                 // 102: keys.RandResponse
	(*RandPasswordRequest)(nil),          // 103: keys.RandPasswordRequest
	(*RandPasswordResponse)(nil),         // 104: keys.RandPasswordResponse
	(*PullRequest)(nil),                  // 105: keys.PullRequest
	(*PullResponse)(nil),                 // 106: keys.PullResponse
	(*PushRequest)(nil),                  // 107: keys.PushRequest
	(*PushResponse)(nil),                 // 108: keys.PushResponse
	(*Collection)(nil),                   // 109: keys.Collection
	(*CollectionsRequest)(nil),           // 110: keys.CollectionsRequest
	(*CollectionsResponse)(nil),          // 111: keys.CollectionsResponse
	(*Document)(nil),                     // 112: keys.Document
	(*DocumentsRequest)(nil),             // 113: keys.DocumentsRequest
	(*DocumentsResponse)(nil),            // 114: keys.DocumentsResponse
	(*DocumentDeleteRequest)(nil),        // 115: keys.DocumentDeleteRequest
	(*DocumentDeleteResponse)(nil),       // 116: keys.DocumentDeleteResponse
	(*User)(nil),                         // 117: keys.User
	(*UserRequest)(nil),                  // 118: keys.UserRequest
	(*UserResponse)(nil),                 // 119: keys.UserResponse
	(*UserSearchRequest)(nil),            // 120: keys.UserSearchRequest
	(*UserSearchResponse)(nil),           // 121: keys.UserSearchResponse
	(*SearchRequest)(nil),                // 122: keys.SearchRequest
	(*SearchResponse)(nil),               // 123: keys.SearchResponse
	(*VaultSyncRequest)(nil),             // 124: keys.VaultSyncRequest
	(*VaultSyncResponse)(nil),            // 125: keys.VaultSyncResponse
	(*VaultUnsyncRequest)(nil),           // 126: keys.VaultUnsyncRequest
	(*VaultUnsyncResponse)(nil),          // 127: keys.VaultUnsyncResponse
	(*VaultAuthRequest)(nil),             // 128: keys.VaultAuthRequest
	(*VaultAuthResponse)(nil),            // 129: keys.VaultAuthResponse
	(*VaultStatusRequest)(nil),           // 130: keys.VaultStatusRequest
	(*VaultStatusResponse)(nil),          // 131: keys.VaultStatusResponse
	(*VaultUpdateRequest)(nil),           // 132: keys.VaultUpdateRequest
	(*VaultUpdateResponse)(nil),          // 133: keys.VaultUpdateResponse
	(*Message)(nil),                      // 134: keys.Message
	(*MessagePrepareRequest)(nil),        // 135: keys.MessagePrepareRequest
	(*MessagePrepareResponse)(nil),       // 136: keys.MessagePrepareResponse
	(*MessageCreateRequest)(nil),         // 137: keys.MessageCreateRequest
	(*MessageCreateResponse)(nil),        // 138: keys.MessageCreateResponse
	(*MessagesRequest)(nil),              // 139: keys.MessagesRequest
	(*MessagesResponse)(nil),             // 140: keys.MessagesResponse
	(*RelayRequest)(nil),                 // 141: keys.RelayRequest
	(*RelayOutput)(nil),                  // 142: keys.RelayOutput
	(*Channel)(nil),                      // 143: keys.Channel
	(*ChannelsRequest)(nil),              // 144: keys.ChannelsRequest
	(*ChannelsResponse)(nil),             // 145: keys.ChannelsResponse
	(*ChannelCreateRequest)(nil),         // 146: keys.ChannelCreateRequest
	(*ChannelCreateResponse)(nil),        // 147: keys.ChannelCreateResponse
	(*ChannelUser)(nil),                  // 148: keys.ChannelUser
	(*ChannelUsersRequest)(nil),          // 149: keys.ChannelUsersRequest
	(*ChannelUsersResponse)(nil),         // 150: keys.ChannelUsersResponse
	(*ChannelInvitesCreateRequest)(nil),  // 151: keys.ChannelInvitesCreateRequest
	(*ChannelInvitesCreateResponse)(nil), // 152: keys.ChannelInvitesCreateResponse
	(*ChannelUninviteRequest)(nil),       // 153: keys.ChannelUninviteRequest
	(*ChannelUninviteResponse)(nil),      // 154: keys.ChannelUninviteResponse
	(*ChannelInvite)(nil),                // 155: keys.ChannelInvite
	(*ChannelInvitesRequest)(nil),        // 156: keys.ChannelInvitesRequest
	(*ChannelInvitesResponse)(nil),       // 157: keys.ChannelInvitesResponse
	(*ChannelUserInvitesRequest)(nil),    // 158: keys.ChannelUserInvitesRequest
	(*ChannelUserInvitesResponse)(nil),   // 159: keys.ChannelUserInvitesResponse
	(*ChannelJoinRequest)(nil),           // 160: keys.ChannelJoinRequest
	(*ChannelJoinResponse)(nil),          // 161: keys.ChannelJoinResponse
	(*ChannelLeaveRequest)(nil),          // 162: keys.ChannelLeaveRequest
	(*ChannelLeaveResponse)(nil),         // 163: keys.ChannelLeaveResponse
	(*AdminSignURLRequest)(nil),          // 164: keys.AdminSignURLRequest
	(*AdminSignURLResponse)(nil),         // 165: keys.AdminSignURLResponse
	(*AdminCheckRequest)(nil),            // 166: keys.AdminCheckRequest
	(*AdminCheckResponse)(nil),           // 167: keys.AdminCheckResponse
	(*Config)(nil),                       // 168: keys.Config
	(*ConfigGetRequest)(nil),             // 169: keys.ConfigGetRequest
	(*ConfigGetResponse)(nil),            // 170: keys.ConfigGetResponse
	(*ConfigSetRequest)(nil),             // 171: keys.ConfigSetRequest
	(*ConfigSetResponse)(nil),            // 172: keys.ConfigSetResponse
	(*WormholeInput)(nil),                // 173: keys.WormholeInput
	(*WormholeMessage)(nil),              // 174: keys.WormholeMessage
	(*WormholeOutput)(nil),               // 175: keys.WormholeOutput
	(*Config_App)(nil),                   // 176: keys.Config.App
	(*Config_Encrypt)(nil),               // 177: keys.Config.Encrypt
	(*Config_Sign)(nil),                  // 178: keys.Config.Sign
}
var file_keys_proto_depIdxs = []int32{
	87,  // 0: keys.VerifyResponse.signer:type_name -> keys.Key
	87,  // 1: keys.VerifyDetachedResponse.signer:type_name -> keys.Key
	87,  // 2: keys.VerifyOutput.signer:type_name -> keys.Key
	87,  // 3: keys.VerifyFileOutput.signer:type_name -> keys.Key
	87,  // 4: keys.SigchainResponse.key:type_name -> keys.Key
	26,  // 5: keys.SigchainResponse.statements:type_name -> keys.Statement
	26,  // 6: keys.StatementResponse.statement:type_name -> keys.Statement
	26,  // 7: keys.StatementCreateResponse.statement:type_name -> keys.Statement
	26,  // 8: keys.StatementRevokeResponse.statement:type_name -> keys.Statement
	0,   // 9: keys.EncryptOptions.mode:type_name -> keys.EncryptMode
	37,  // 10: keys.EncryptRequest.options:type_name -> keys.EncryptOptions
	37,  // 11: keys.EncryptFileInput.options:type_name -> keys.EncryptOptions
	37,  // 12: keys.EncryptInput.options:type_name -> keys.EncryptOptions
	87,  // 13: keys.DecryptResponse.sender:type_name -> keys.Key
	0,   // 14: keys.DecryptResponse.mode:type_name -> keys.EncryptMode
	87,  // 15: keys.DecryptFileOutput.sender:type_name -> keys.Key
	0,   // 16: keys.DecryptFileOutput.mode:type_name -> keys.EncryptMode
	87,  // 17: keys.DecryptOutput.sender:type_name -> keys.Key
	0,   // 18: keys.DecryptOutput.mode:type_name -> keys.EncryptMode
	1,   // 19: keys.RuntimeStatusResponse.authStatus:type_name -> keys.AuthStatus
	2,   // 20: keys.AuthSetupRequest.type:type_name -> keys.AuthType
	2,   // 21: keys.AuthUnlockRequest.type:type_name -> keys.AuthType
	2,   // 22: keys.AuthProvisionRequest.type:type_name -> keys.AuthType
	64,  // 23: keys.AuthProvisionResponse.provision:type_name -> keys.AuthProvision
	2,   // 24: keys.AuthProvision.type:type_name -> keys.AuthType
	64,  // 25: keys.AuthProvisionsResponse.provisions:type_name -> keys.AuthProvision
	117, // 26: keys.UserAddResponse.user:type_name -> keys.User
	26,  // 27: keys.UserAddResponse.statement:type_name -> keys.Statement
	3,   // 28: keys.KeyExportRequest.type:type_name -> keys.ExportType
	117, // 29: keys.Key.user:type_name -> keys.User
	87,  // 30: keys.KeyResponse.key:type_name -> keys.Key
	4,   // 31: keys.KeysRequest.sortDirection:type_name -> keys.SortDirection
	87,  // 32: keys.KeysResponse.keys:type_name -> keys.Key
	4,   // 33: keys.KeysResponse.sortDirection:type_name -> keys.SortDirection
	5,   // 34: keys.Secret.type:type_name -> keys.SecretType
	92,  // 35: keys.SecretResponse.secret:type_name -> keys.Secret
	92,  // 36: keys.SecretSaveRequest.secret:type_name -> keys.Secret
	92,  // 37: keys.SecretSaveResponse.secret:type_name -> keys.Secret
	4,   // 38: keys.SecretsRequest.sortDirection:type_name -> keys.SortDirection
	92,  // 39: keys.SecretsResponse.secrets:type_name -> keys.Secret
	4,   // 40: keys.SecretsResponse.sortDirection:type_name -> keys.SortDirection
	6,   // 41: keys.RandRequest.encoding:type_name -> keys.Encoding
	109, // 42: keys.CollectionsResponse.collections:type_name -> keys.Collection
	112, // 43: keys.DocumentsResponse.documents:type_name -> keys.Document
	7,   // 44: keys.User.status:type_name -> keys.UserStatus
	117, // 45: keys.UserResponse.user:type_name -> keys.User
	117, // 46: keys.UserSearchResponse.users:type_name -> keys.User
	87,  // 47: keys.SearchResponse.keys:type_name -> keys.Key
	87,  // 48: keys.Message.sender:type_name -> keys.Key
	8,   // 49: keys.Message.status:type_name -> keys.MessageStatus
	134, // 50: keys.MessagePrepareResponse.message:type_name -> keys.Message
	134, // 51: keys.MessageCreateResponse.message:type_name -> keys.Message
	134, // 52: keys.MessagesResponse.messages:type_name -> keys.Message
	9,   // 53: keys.RelayOutput.type:type_name -> keys.RelayType
	143, // 54: keys.ChannelsResponse.channels:type_name -> keys.Channel
	143, // 55: keys.ChannelCreateResponse.channel:type_name -> keys.Channel
	87,  // 56: keys.ChannelUser.key:type_name -> keys.Key
	148, // 57: keys.ChannelUsersResponse.users:type_name -> keys.ChannelUser
	134, // 58: keys.ChannelInvitesCreateResponse.message:type_name -> keys.Message
	134, // 59: keys.ChannelUninviteResponse.message:type_name -> keys.Message
	143, // 60: keys.ChannelInvite.channel:type_name -> keys.Channel
	87,  // 61: keys.ChannelInvite.recipient:type_name -> keys.Key
	87,  // 62: keys.ChannelInvite.sender:type_name -> keys.Key
	155, // 63: keys.ChannelInvitesResponse.invites:type_name -> keys.ChannelInvite
	155, // 64: keys.ChannelUserInvitesResponse.invites:type_name -> keys.ChannelInvite
	134, // 65: keys.ChannelLeaveResponse.message:type_name -> keys.Message
	176, // 66: keys.Config.app:type_name -> keys.Config.App
	177, // 67: keys.Config.encrypt:type_name -> keys.Config.Encrypt
	178, // 68: keys.Config.sign:type_name -> keys.Config.Sign
	168, // 69: keys.ConfigGetResponse.config:type_name -> keys.Config
	168, // 70: keys.ConfigSetRequest.config:type_name -> keys.Config
	87,  // 71: keys.WormholeMessage.sender:type_name -> keys.Key
	87,  // 72: keys.WormholeMessage.recipient:type_name -> keys.Key
	11,  // 73: keys.WormholeMessage.status:type_name -> keys.WormholeMessageStatus
	174, // 74: keys.WormholeOutput.message:type_name -> keys.WormholeMessage
	10,  // 75: keys.WormholeOutput.status:type_name -> keys.WormholeStatus
	73,  // 76: keys.Keys.KeyGenerate:input_type -> keys.KeyGenerateRequest
	90,  // 77: keys.Keys.Keys:input_type -> keys.KeysRequest
	88,  // 78: keys.Keys.Key:input_type -> keys.KeyRequest
	83,  // 79: keys.Keys.KeyImport:input_type -> keys.KeyImportRequest
	81,  // 80: keys.Keys.KeyExport:input_type -> keys.KeyExportRequest
	85,  // 81: keys.Keys.KeyRemove:input_type -> keys.KeyRemoveRequest
	12,  // 82: keys.Keys.Sign:input_type -> keys.SignRequest
	14,  // 83: keys.Keys.SignFile:input_type -> keys.SignFileInput
	35,  // 84: keys.Keys.SignStream:input_type -> keys.SignInput
	16,  // 85: keys.Keys.Verify:input_type -> keys.VerifyRequest
	22,  // 86: keys.Keys.VerifyFile:input_type -> keys.VerifyFileInput
	20,  // 87: keys.Keys.VerifyStream:input_type -> keys.VerifyInput
	18,  // 88: keys.Keys.VerifyDetached:input_type -> keys.VerifyDetachedRequest
	24,  // 89: keys.Keys.VerifyDetachedFile:input_type -> keys.VerifyDetachedFileInput
	25,  // 90: keys.Keys.VerifyDetachedStream:input_type -> keys.VerifyDetachedInput
	38,  // 91: keys.Keys.Encrypt:input_type -> keys.EncryptRequest
	42,  // 92: keys.Keys.EncryptStream:input_type -> keys.EncryptInput
	40,  // 93: keys.Keys.EncryptFile:input_type -> keys.EncryptFileInput
	44,  // 94: keys.Keys.Decrypt:input_type -> keys.DecryptRequest
	48,  // 95: keys.Keys.DecryptStream:input_type -> keys.DecryptInput
	46,  // 96: keys.Keys.DecryptFile:input_type -> keys.DecryptFileInput
	27,  // 97: keys.Keys.Sigchain:input_type -> keys.SigchainRequest
	29,  // 98: keys.Keys.Statement:input_type -> keys.StatementRequest
	31,  // 99: keys.Keys.StatementCreate:input_type -> keys.StatementCreateRequest
	33,  // 100: keys.Keys.StatementRevoke:input_type -> keys.StatementRevokeRequest
	118, // 101: keys.Keys.User:input_type -> keys.UserRequest
	120, // 102: keys.Keys.UserSearch:input_type -> keys.UserSearchRequest
	75,  // 103: keys.Keys.UserService:input_type -> keys.UserServiceRequest
	77,  // 104: keys.Keys.UserSign:input_type -> keys.UserSignRequest
	79,  // 105: keys.Keys.UserAdd:input_type -> keys.UserAddRequest
	122, // 106: keys.Keys.Search:input_type -> keys.SearchRequest
	93,  // 107: keys.Keys.Secret:input_type -> keys.SecretRequest
	95,  // 108: keys.Keys.SecretSave:input_type -> keys.SecretSaveRequest
	97,  // 109: keys.Keys.SecretRemove:input_type -> keys.SecretRemoveRequest
	99,  // 110: keys.Keys.Secrets:input_type -> keys.SecretsRequest
	105, // 111: keys.Keys.Pull:input_type -> keys.PullRequest
	107, // 112: keys.Keys.Push:input_type -> keys.PushRequest
	173, // 113: keys.Keys.Wormhole:input_type -> keys.WormholeInput
	52,  // 114: keys.Keys.AuthSetup:input_type -> keys.AuthSetupRequest
	54,  // 115: keys.Keys.AuthVault:input_type -> keys.AuthVaultRequest
	56,  // 116: keys.Keys.AuthUnlock:input_type -> keys.AuthUnlockRequest
	67,  // 117: keys.Keys.AuthLock:input_type -> keys.AuthLockRequest
	69,  // 118: keys.Keys.AuthReset:input_type -> keys.AuthResetRequest
	71,  // 119: keys.Keys.AuthRecover:input_type -> keys.AuthRecoverRequest
	50,  // 120: keys.Keys.RuntimeStatus:input_type -> keys.RuntimeStatusRequest
	101, // 121: keys.Keys.Rand:input_type -> keys.RandRequest
	103, // 122: keys.Keys.RandPassword:input_type -> keys.RandPasswordRequest
	58,  // 123: keys.Keys.AuthProvision:input_type -> keys.AuthProvisionRequest
	60,  // 124: keys.Keys.AuthDeprovision:input_type -> keys.AuthDeprovisionRequest
	65,  // 125: keys.Keys.AuthProvisions:input_type -> keys.AuthProvisionsRequest
	62,  // 126: keys.Keys.AuthPasswordChange:input_type -> keys.AuthPasswordChangeRequest
	128, // 127: keys.Keys.VaultAuth:input_type -> keys.VaultAuthRequest
	124, // 128: keys.Keys.VaultSync:input_type -> keys.VaultSyncRequest
	126, // 129: keys.Keys.VaultUnsync:input_type -> keys.VaultUnsyncRequest
	130, // 130: keys.Keys.VaultStatus:input_type -> keys.VaultStatusRequest
	132, // 131: keys.Keys.VaultUpdate:input_type -> keys.VaultUpdateRequest
	110, // 132: keys.Keys.Collections:input_type -> keys.CollectionsRequest
	113, // 133: keys.Keys.Documents:input_type -> keys.DocumentsRequest
	115, // 134: keys.Keys.DocumentDelete:input_type -> keys.DocumentDeleteRequest
	169, // 135: keys.Keys.ConfigGet:input_type -> keys.ConfigGetRequest
	171, // 136: keys.Keys.ConfigSet:input_type -> keys.ConfigSetRequest
	164, // 137: keys.Keys.AdminSignURL:input_type -> keys.AdminSignURLRequest
	166, // 138: keys.Keys.AdminCheck:input_type -> keys.AdminCheckRequest
	144, // 139: keys.Keys.Channels:input_type -> keys.ChannelsRequest
	146, // 140: keys.Keys.ChannelCreate:input_type -> keys.ChannelCreateRequest
	149, // 141: keys.Keys.ChannelUsers:input_type -> keys.ChannelUsersRequest
	151, // 142: keys.Keys.ChannelInvitesCreate:input_type -> keys.ChannelInvitesCreateRequest
	153, // 143: keys.Keys.ChannelUninvite:input_type -> keys.ChannelUninviteRequest
	156, // 144: keys.Keys.ChannelInvites:input_type -> keys.ChannelInvitesRequest
	158, // 145: keys.Keys.ChannelUserInvites:input_type -> keys.ChannelUserInvitesRequest
	160, // 146: keys.Keys.ChannelJoin:input_type -> keys.ChannelJoinRequest
	162, // 147: keys.Keys.ChannelLeave:input_type -> keys.ChannelLeaveRequest
	135, // 148: keys.Keys.MessagePrepare:input_type -> keys.MessagePrepareRequest
	137, // 149: keys.Keys.MessageCreate:input_type -> keys.MessageCreateRequest
	139, // 150: keys.Keys.Messages:input_type -> keys.MessagesRequest
	141, // 151: keys.Keys.Relay:input_type -> keys.RelayRequest
	74,  // 152: keys.Keys.KeyGenerate:output_type -> keys.KeyGenerateResponse
	91,  // 153: keys.Keys.Keys:output_type -> keys.KeysResponse
	89,  // 154: keys.Keys.Key:output_type -> keys.KeyResponse
	84,  // 155: keys.Keys.KeyImport:output_type -> keys.KeyImportResponse
	82,  // 156: keys.Keys.KeyExport:output_type -> keys.KeyExportResponse
	86,  // 157: keys.Keys.KeyRemove:output_type -> keys.KeyRemoveResponse
	13,  // 158: keys.Keys.Sign:output_type -> keys.SignResponse
	15,  // 159: keys.Keys.SignFile:output_type -> keys.SignFileOutput
	36,  // 160: keys.Keys.SignStream:output_type -> keys.SignOutput
	17,  // 161: keys.Keys.Verify:output_type -> keys.VerifyResponse
	23,  // 162: keys.Keys.VerifyFile:output_type -> keys.VerifyFileOutput
	21,  // 163: keys.Keys.VerifyStream:output_type -> keys.VerifyOutput
	19,  // 164: keys.Keys.VerifyDetached:output_type -> keys.VerifyDetachedResponse
	19,  // 165: keys.Keys.VerifyDetachedFile:output_type -> keys.VerifyDetachedResponse
	19,  // 166: keys.Keys.VerifyDetachedStream:output_type -> keys.VerifyDetachedResponse
	39,  // 167: keys.Keys.Encrypt:output_type -> keys.EncryptResponse
	43,  // 168: keys.Keys.EncryptStream:output_type -> keys.EncryptOutput
	41,  // 169: keys.Keys.EncryptFile:output_type -> keys.EncryptFileOutput
	45,  // 170: keys.Keys.Decrypt:output_type -> keys.DecryptResponse
	49,  // 171: keys.Keys.DecryptStream:output_type -> keys.DecryptOutput
	47,  // 172: keys.Keys.DecryptFile:output_type -> keys.DecryptFileOutput
	28,  // 173: keys.Keys.Sigchain:output_type -> keys.SigchainResponse
	30,  // 174: keys.Keys.Statement:output_type -> keys.StatementResponse
	32,  // 175: keys.Keys.StatementCreate:output_type -> keys.StatementCreateResponse
	34,  // 176: keys.Keys.StatementRevoke:output_type -> keys.StatementRevokeResponse
	119, // 177: keys.Keys.User:output_type -> keys.UserResponse
	121, // 178: keys.Keys.UserSearch:output_type -> keys.UserSearchResponse
	76,  // 179: keys.Keys.UserService:output_type -> keys.UserServiceResponse
	78,  // 180: keys.Keys.UserSign:output_type -> keys.UserSignResponse
	80,  // 181: keys.Keys.UserAdd:output_type -> keys.UserAddResponse
	123, // 182: keys.Keys.Search:output_type -> keys.SearchResponse
	94,  // 183: keys.Keys.Secret:output_type -> keys.SecretResponse
	96,  // 184: keys.Keys.SecretSave:output_type -> keys.SecretSaveResponse
	98,  // 185: keys.Keys.SecretRemove:output_type -> keys.SecretRemoveResponse
	100, // 186: keys.Keys.Secrets:output_type -> keys.SecretsResponse
	106, // 187: keys.Keys.Pull:output_type -> keys.PullResponse
	108, // 188: keys.Keys.Push:output_type -> keys.PushResponse
	175, // 189: keys.Keys.Wormhole:output_type -> keys.WormholeOutput
	53,  // 190: keys.Keys.AuthSetup:output_type -> keys.AuthSetupResponse
	55,  // 191: keys.Keys.AuthVault:output_type -> keys.AuthVaultResponse
	57,  // 192: keys.Keys.AuthUnlock:output_type -> keys.AuthUnlockResponse
	68,  // 193: keys.Keys.AuthLock:output_type -> keys.AuthLockResponse
	70,  // 194: keys.Keys.AuthReset:output_type -> keys.AuthResetResponse
	72,  // 195: keys.Keys.AuthRecover:output_type -> keys.AuthRecoverResponse
	51,  // 196: keys.Keys.RuntimeStatus:output_type -> keys.RuntimeStatusResponse
	102, // 197: keys.Keys.Rand:output_type -> keys.RandResponse
	104, // 198: keys.Keys.RandPassword:output_type -> keys.RandPasswordResponse
	59,  // 199: keys.Keys.AuthProvision:output_type -> keys.AuthProvisionResponse
	61,  // 200: keys.Keys.AuthDeprovision:output_type -> keys.AuthDeprovisionResponse
	66,  // 201: keys.Keys.AuthProvisions:output_type -> keys.AuthProvisionsResponse
	63,  // 202: keys.Keys.AuthPasswordChange:output_type -> keys.AuthPasswordChangeResponse
	129, // 203: keys.Keys.VaultAuth:output_type -> keys.VaultAuthResponse
	125, // 204: keys.Keys.VaultSync:output_type -> keys.VaultSyncResponse
	127, // 205: keys.Keys.VaultUnsync:output_type -> keys.VaultUnsyncResponse
	131, // 206: keys.Keys.VaultStatus:output_type -> keys.VaultStatusResponse
	133, // 207: keys.Keys.VaultUpdate:output_type -> keys.VaultUpdateResponse
	111, // 208: keys.Keys.Collections:output_type -> keys.CollectionsResponse
	114, // 209: keys.Keys.Documents:output_type -> keys.DocumentsResponse
	116, // 210: keys.Keys.DocumentDelete:output_type -> keys.DocumentDeleteResponse
	170, // 211: keys.Keys.ConfigGet:output_type -> keys.ConfigGetResponse
	172, // 212: keys.Keys.ConfigSet:output_type -> keys.ConfigSetResponse
	165, // 213: keys.Keys.AdminSignURL:output_type -> keys.AdminSignURLResponse
	167, // 214: keys.Keys.AdminCheck:output_type -> keys.AdminCheckResponse
	145, // 215: keys.Keys.Channels:output_type -> keys.ChannelsResponse
	147, // 216: keys.Keys.ChannelCreate:output_type -> keys.ChannelCreateResponse
	150, // 217: keys.Keys.ChannelUsers:output_type -> keys.ChannelUsersResponse
	152, // 218: keys.Keys.ChannelInvitesCreate:output_type -> keys.ChannelInvitesCreateResponse
	154, // 219: keys.Keys.ChannelUninvite:output_type -> keys.ChannelUninviteResponse
	157, // 220: keys.Keys.ChannelInvites:output_type -> keys.ChannelInvitesResponse
	159, // 221: keys.Keys.ChannelUserInvites:output_type -> keys.ChannelUserInvitesResponse
	161, // 222: keys.Keys.ChannelJoin:output_type -> keys.ChannelJoinResponse
	163, // 223: keys.Keys.ChannelLeave:output_type -> keys.ChannelLeaveResponse
	136, // 224: keys.Keys.MessagePrepare:output_type -> keys.MessagePrepareResponse
	138, // 225: keys.Keys.MessageCreate:output_type -> keys.MessageCreateResponse
	140, // 226: keys.Keys.Messages:output_type -> keys.MessagesResponse
	142, // 227: keys.Keys.Relay:output_type -> keys.RelayOutput
	152, // [152:228] is the sub-list for method output_type
	76,  // [76:152] is the sub-list for method input_type
	76,  // [76:76] is the sub-list for extension type_name
	76,  // [76:76] is the sub-list for extension extendee
	0,   // [0:76] is the sub-list for field type_name
}

func init() { file_keys_proto_init() }
func file_keys_proto_init() {
	if File_keys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_keys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignFileOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyDetachedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyDetachedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyFileOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyDetachedFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyDetachedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigchainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigchainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatementCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatementCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatementRevokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatementRevokeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptFileOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptFileInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptFileOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthSetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthSetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthVaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthVaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUnlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUnlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthProvisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthProvisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthDeprovisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthDeprovisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPasswordChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPasswordChangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthProvision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthProvisionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthProvisionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthLockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthLockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRecoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRecoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyGenerateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyGenerateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyImportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyImportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultUnsyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultUnsyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VaultUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePrepareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePrepareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInvitesCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInvitesCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUninviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUninviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInvite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInvitesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInvitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUserInvitesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUserInvitesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelJoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelJoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelLeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelLeaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminSignURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminSignURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WormholeInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WormholeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WormholeOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Encrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keys_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Sign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_keys_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   167,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_keys_proto_goTypes,
		DependencyIndexes: file_keys_proto_depIdxs,
		EnumInfos:         file_keys_proto_enumTypes,
		MessageInfos:      file_keys_proto_msgTypes,
	}.Build()
	File_keys_proto = out.File
	file_keys_proto_rawDesc = nil
	file_keys_proto_goTypes = nil
	file_keys_proto_depIdxs = nil
}
